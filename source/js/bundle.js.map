{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 844402d51859814b438f","webpack:///./node_modules/cash-dom/dist/cash.js","webpack:///./js/index.js","webpack:///./js/flyin.js","webpack:///./js/slider.js","webpack:///./js/overflow.js","webpack:///./js/toggle.js","webpack:///./js/fadeSiblings.js","webpack:///./node_modules/tooltip.js/dist/esm/tooltip.js","webpack:///./node_modules/popper.js/dist/esm/popper.js","webpack:///(webpack)/buildin/global.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","undefined","this","find","selector","context","doc","classMatch","test","getElementsByClassName","slice","singlet","getElementsByTagName","querySelectorAll","parseHTML","str","frag","implementation","createHTMLDocument","base","createElement","href","location","head","appendChild","body","innerHTML","childNodes","onReady","fn","readyState","addEventListener","Init","cash","win","length","elems","isString","idMatch","getElementById","htmlMatch","isFunction","nodeType","each","collection","callback","matches","el","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","getCompareFunction","is","unique","filter","item","index","self","indexOf","getDataCache","node","uid","setData","key","value","getData","dataset","attr","removeData","removeAttr","getClasses","match","notWhiteMatch","hasClass","v","classList","contains","RegExp","className","addClass","spacedName","add","removeClass","remove","replace","compute","prop","parseInt","getComputedStyle","registerEvent","eventName","eventCache","push","removeEvent","events","removeEventListener","splice","event","encode","encodeURIComponent","getSelectMultiple_","values","options","selected","getSelectSingle_","selectedIndex","getValue","type","toLowerCase","insertElement","child","prepend","first","insertBefore","insertContent","parent","insertAdjacentHTML","cloneNode","document","window","ArrayProto","Array","noop","map","init","extend","target","args","arguments","merge","second","len","j","isArray","isNumeric","isNaN","parseFloat","isFinite","Date","now","data","classes","getAttribute","setAttribute","check","removeAttribute","removeProp","toggleClass","state","eq","comparator","e","elem","children","last","camelCase","camelRegex","whiteSpace","letter","getPrefixedProp","cache","div","style","ucProp","charAt","toUpperCase","join","split","prefixedProp","css","lower","getBoundingClientRect","margins","off","on","delegate","runOnce","originalCallback","t","parentNode","finalCallback","apply","one","ready","trigger","evt","createEvent","initEvent","dispatchEvent","serialize","query","elements","disabled","tagName","substr","val","after","insertAfter","append","content","appendTo","before","clone","empty","html","source","outerHTML","_this","sibling","nextSibling","_this2","prependTo","removeChild","text","textContent","docEl","documentElement","position","left","offsetLeft","top","offsetTop","offset","rect","pageYOffset","clientTop","pageXOffset","clientLeft","offsetParent","closest","has","next","nextElementSibling","not","result","parents","prev","previousElementSibling","siblings","__webpack_exports__","toggleFlyin","__WEBPACK_IMPORTED_MODULE_0_cash_dom___default","siteWrapper","allowScrolling","__WEBPACK_IMPORTED_MODULE_0_cash_dom__","ontouchmove","preventDefault","Slide","id","slide","nav","slideTransition","class","zIndex","setZIndex","z","activateNav","deactivateNav","animateEnter","setTimeout","obj","rm","animateLeave","cssClass","Slider","slider","slideDelay","sliderList","sliderNav","slides","reverse","unshift","pop","slideStack","slideCount","currentSlide","numChanged","isAutomatic","intervalId","setZIndices","forEach","setActiveNav","transitionSlide","direction","intervalFunction","console","log","clearInterval","shift","setInterval","deactivateAutomatic","nextSlide","previousSlide","sliders","slideDuration","automatic","Overflow","container","count","childrenWidth","width","spaceBetween","innerWidth","outerWidth","currentPos","getShiftWidth","shiftCount","Math","round","overflowNavWidth","shiftWidth","shiftRight","setContentX","updateContainerState","shiftLeft","x","updateContainerWidth","overflowArray","element","overflow","functionToCheck","getType","toString","__WEBPACK_IMPORTED_MODULE_0_popper_js__","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","_extends","assign","DEFAULT_OPTIONS","delay","placement","title","template","_initialiseProps","Tooltip","reference","jquery","_isOpen","_setEventListeners","allowHtml","tooltipGenerator","trim","tooltipNode","random","titleNode","querySelector","innerSelector","titleText","innerText","_tooltipNode","display","popperInstance","update","_create","_findContainer","_append","popperOptions","modifiers","arrow","arrowSelector","boundariesElement","preventOverflow","_hide","destroy","_events","_ref","func","directEvents","oppositeEvents","usedByTooltip","_scheduleShow","_scheduleHide","_this3","computedDelay","show","_show","_this4","hide","_setTooltipNodeEvent","_this5","dispose","_dispose","toggle","relatedreference","toElement","evt2","relatedreference2","global","microtaskDebounce","scheduled","MutationObserver","observe","attributes","taskDebounce","timeoutDuration","getStyleComputedProperty","getParentNode","nodeName","host","getScrollParent","_getStyleComputedProp","overflowX","overflowY","getOffsetParent","isOffsetContainer","firstElementChild","getRoot","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","element1root","getScroll","side","upperSide","scrollingElement","includeScroll","subtract","scrollTop","scrollLeft","modifier","bottom","right","getBordersSize","styles","axis","sideA","sideB","getSize","computedStyle","max","isIE10$1","getWindowSizes","height","getClientRect","offsets","err","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","isIE10","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","relativeOffset","innerHeight","isFixed","getBoundaries","popper","padding","boundaries","boundariesNode","_getWindowSizes","getArea","computeAutoPlacement","refRect","rects","sortedAreas","keys","area","sort","a","b","filteredAreas","_ref2","computedPlacement","variation","getReferenceOffsets","getOuterSizes","marginBottom","y","marginRight","getOppositePlacement","hash","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","arr","findIndex","cur","runModifiers","ends","function","warn","enabled","isDestroyed","arrowStyles","flipped","flip","originalPlacement","isCreated","onUpdate","onCreate","isModifierEnabled","modifierName","some","getSupportedPropertyName","prefixes","upperProp","prefix","toCheck","disableEventListeners","removeOnDestroy","attachToScrollParents","scrollParents","isBody","passive","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","cancelAnimationFrame","setStyles","unit","setAttributes","applyStyle","arrowElement","applyStyleOnLoad","modifierOptions","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","floor","prefixedProperty","willChange","invertTop","invertLeft","x-placement","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","_data$offsets","isVertical","sideCapitalized","altSide","opSide","arrowElementSize","center","popperMarginSide","sideValue","min","getOppositeVariation","clockwise","counter","validPlacements","concat","placementOpposite","flipOrder","behavior","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","toValue","parseOffset","basePlacement","useHeight","fragments","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","priority","primary","escapeWithReference","secondary","shiftvariation","shiftOffsets","bound","inner","subtractLength","nativeHints","isBrowser","longerTimeoutBrowsers","navigator","userAgent","supportsNativeMutationObserver","hint","debounce","appVersion","placements","onLoad","Defaults","Popper","requestAnimationFrame","bind","Utils","PopperUtils","g","Function","eval"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n/*! cash-dom 1.3.5, https://github.com/kenwheeler/cash @license MIT */\n;(function (root, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports !== \"undefined\") {\n    module.exports = factory();\n  } else {\n    root.cash = root.$ = factory();\n  }\n})(this, function () {\n  var doc = document, win = window, ArrayProto = Array.prototype, slice = ArrayProto.slice, filter = ArrayProto.filter, push = ArrayProto.push;\n\n  var noop = function () {}, isFunction = function (item) {\n    // @see https://crbug.com/568448\n    return typeof item === typeof noop && item.call;\n  }, isString = function (item) {\n    return typeof item === typeof \"\";\n  };\n\n  var idMatch = /^#[\\w-]*$/, classMatch = /^\\.[\\w-]*$/, htmlMatch = /<.+>/, singlet = /^\\w+$/;\n\n  function find(selector, context) {\n    context = context || doc;\n    var elems = (classMatch.test(selector) ? context.getElementsByClassName(selector.slice(1)) : singlet.test(selector) ? context.getElementsByTagName(selector) : context.querySelectorAll(selector));\n    return elems;\n  }\n\n  var frag;\n  function parseHTML(str) {\n    if (!frag) {\n      frag = doc.implementation.createHTMLDocument();\n      var base = frag.createElement(\"base\");\n      base.href = doc.location.href;\n      frag.head.appendChild(base);\n    }\n\n    frag.body.innerHTML = str;\n\n    return frag.body.childNodes;\n  }\n\n  function onReady(fn) {\n    if (doc.readyState !== \"loading\") {\n      fn();\n    } else {\n      doc.addEventListener(\"DOMContentLoaded\", fn);\n    }\n  }\n\n  function Init(selector, context) {\n    if (!selector) {\n      return this;\n    }\n\n    // If already a cash collection, don't do any further processing\n    if (selector.cash && selector !== win) {\n      return selector;\n    }\n\n    var elems = selector, i = 0, length;\n\n    if (isString(selector)) {\n      elems = (idMatch.test(selector) ?\n      // If an ID use the faster getElementById check\n      doc.getElementById(selector.slice(1)) : htmlMatch.test(selector) ?\n      // If HTML, parse it into real elements\n      parseHTML(selector) :\n      // else use `find`\n      find(selector, context));\n\n      // If function, use as shortcut for DOM ready\n    } else if (isFunction(selector)) {\n      onReady(selector);return this;\n    }\n\n    if (!elems) {\n      return this;\n    }\n\n    // If a single DOM element is passed in or received via ID, return the single element\n    if (elems.nodeType || elems === win) {\n      this[0] = elems;\n      this.length = 1;\n    } else {\n      // Treat like an array and loop through each item.\n      length = this.length = elems.length;\n      for (; i < length; i++) {\n        this[i] = elems[i];\n      }\n    }\n\n    return this;\n  }\n\n  function cash(selector, context) {\n    return new Init(selector, context);\n  }\n\n  var fn = cash.fn = cash.prototype = Init.prototype = { // jshint ignore:line\n    cash: true,\n    length: 0,\n    push: push,\n    splice: ArrayProto.splice,\n    map: ArrayProto.map,\n    init: Init\n  };\n\n  Object.defineProperty(fn, \"constructor\", { value: cash });\n\n  cash.parseHTML = parseHTML;\n  cash.noop = noop;\n  cash.isFunction = isFunction;\n  cash.isString = isString;\n\n  cash.extend = fn.extend = function (target) {\n    target = target || {};\n\n    var args = slice.call(arguments), length = args.length, i = 1;\n\n    if (args.length === 1) {\n      target = this;\n      i = 0;\n    }\n\n    for (; i < length; i++) {\n      if (!args[i]) {\n        continue;\n      }\n      for (var key in args[i]) {\n        if (args[i].hasOwnProperty(key)) {\n          target[key] = args[i][key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function each(collection, callback) {\n    var l = collection.length, i = 0;\n\n    for (; i < l; i++) {\n      if (callback.call(collection[i], collection[i], i, collection) === false) {\n        break;\n      }\n    }\n  }\n\n  function matches(el, selector) {\n    var m = el && (el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector || el.oMatchesSelector);\n    return !!m && m.call(el, selector);\n  }\n\n  function getCompareFunction(selector) {\n    return (\n    /* Use browser's `matches` function if string */\n    isString(selector) ? matches :\n    /* Match a cash element */\n    selector.cash ? function (el) {\n      return selector.is(el);\n    } :\n    /* Direct comparison */\n    function (el, selector) {\n      return el === selector;\n    });\n  }\n\n  function unique(collection) {\n    return cash(slice.call(collection).filter(function (item, index, self) {\n      return self.indexOf(item) === index;\n    }));\n  }\n\n  cash.extend({\n    merge: function (first, second) {\n      var len = +second.length, i = first.length, j = 0;\n\n      for (; j < len; i++, j++) {\n        first[i] = second[j];\n      }\n\n      first.length = i;\n      return first;\n    },\n\n    each: each,\n    matches: matches,\n    unique: unique,\n    isArray: Array.isArray,\n    isNumeric: function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n  });\n\n  var uid = cash.uid = \"_cash\" + Date.now();\n\n  function getDataCache(node) {\n    return (node[uid] = node[uid] || {});\n  }\n\n  function setData(node, key, value) {\n    return (getDataCache(node)[key] = value);\n  }\n\n  function getData(node, key) {\n    var c = getDataCache(node);\n    if (c[key] === undefined) {\n      c[key] = node.dataset ? node.dataset[key] : cash(node).attr(\"data-\" + key);\n    }\n    return c[key];\n  }\n\n  function removeData(node, key) {\n    var c = getDataCache(node);\n    if (c) {\n      delete c[key];\n    } else if (node.dataset) {\n      delete node.dataset[key];\n    } else {\n      cash(node).removeAttr(\"data-\" + name);\n    }\n  }\n\n  fn.extend({\n    data: function (name, value) {\n      if (isString(name)) {\n        return (value === undefined ? getData(this[0], name) : this.each(function (v) {\n          return setData(v, name, value);\n        }));\n      }\n\n      for (var key in name) {\n        this.data(key, name[key]);\n      }\n\n      return this;\n    },\n\n    removeData: function (key) {\n      return this.each(function (v) {\n        return removeData(v, key);\n      });\n    }\n\n  });\n\n  var notWhiteMatch = /\\S+/g;\n\n  function getClasses(c) {\n    return isString(c) && c.match(notWhiteMatch);\n  }\n\n  function hasClass(v, c) {\n    return (v.classList ? v.classList.contains(c) : new RegExp(\"(^| )\" + c + \"( |$)\", \"gi\").test(v.className));\n  }\n\n  function addClass(v, c, spacedName) {\n    if (v.classList) {\n      v.classList.add(c);\n    } else if (spacedName.indexOf(\" \" + c + \" \")) {\n      v.className += \" \" + c;\n    }\n  }\n\n  function removeClass(v, c) {\n    if (v.classList) {\n      v.classList.remove(c);\n    } else {\n      v.className = v.className.replace(c, \"\");\n    }\n  }\n\n  fn.extend({\n    addClass: function (c) {\n      var classes = getClasses(c);\n\n      return (classes ? this.each(function (v) {\n        var spacedName = \" \" + v.className + \" \";\n        each(classes, function (c) {\n          addClass(v, c, spacedName);\n        });\n      }) : this);\n    },\n\n    attr: function (name, value) {\n      if (!name) {\n        return undefined;\n      }\n\n      if (isString(name)) {\n        if (value === undefined) {\n          return this[0] ? this[0].getAttribute ? this[0].getAttribute(name) : this[0][name] : undefined;\n        }\n\n        return this.each(function (v) {\n          if (v.setAttribute) {\n            v.setAttribute(name, value);\n          } else {\n            v[name] = value;\n          }\n        });\n      }\n\n      for (var key in name) {\n        this.attr(key, name[key]);\n      }\n\n      return this;\n    },\n\n    hasClass: function (c) {\n      var check = false, classes = getClasses(c);\n      if (classes && classes.length) {\n        this.each(function (v) {\n          check = hasClass(v, classes[0]);\n          return !check;\n        });\n      }\n      return check;\n    },\n\n    prop: function (name, value) {\n      if (isString(name)) {\n        return (value === undefined ? this[0][name] : this.each(function (v) {\n          v[name] = value;\n        }));\n      }\n\n      for (var key in name) {\n        this.prop(key, name[key]);\n      }\n\n      return this;\n    },\n\n    removeAttr: function (name) {\n      return this.each(function (v) {\n        if (v.removeAttribute) {\n          v.removeAttribute(name);\n        } else {\n          delete v[name];\n        }\n      });\n    },\n\n    removeClass: function (c) {\n      if (!arguments.length) {\n        return this.attr(\"class\", \"\");\n      }\n      var classes = getClasses(c);\n      return (classes ? this.each(function (v) {\n        each(classes, function (c) {\n          removeClass(v, c);\n        });\n      }) : this);\n    },\n\n    removeProp: function (name) {\n      return this.each(function (v) {\n        delete v[name];\n      });\n    },\n\n    toggleClass: function (c, state) {\n      if (state !== undefined) {\n        return this[state ? \"addClass\" : \"removeClass\"](c);\n      }\n      var classes = getClasses(c);\n      return (classes ? this.each(function (v) {\n        var spacedName = \" \" + v.className + \" \";\n        each(classes, function (c) {\n          if (hasClass(v, c)) {\n            removeClass(v, c);\n          } else {\n            addClass(v, c, spacedName);\n          }\n        });\n      }) : this);\n    } });\n\n  fn.extend({\n    add: function (selector, context) {\n      return unique(cash.merge(this, cash(selector, context)));\n    },\n\n    each: function (callback) {\n      each(this, callback);\n      return this;\n    },\n\n    eq: function (index) {\n      return cash(this.get(index));\n    },\n\n    filter: function (selector) {\n      if (!selector) {\n        return this;\n      }\n\n      var comparator = (isFunction(selector) ? selector : getCompareFunction(selector));\n\n      return cash(filter.call(this, function (e) {\n        return comparator(e, selector);\n      }));\n    },\n\n    first: function () {\n      return this.eq(0);\n    },\n\n    get: function (index) {\n      if (index === undefined) {\n        return slice.call(this);\n      }\n      return (index < 0 ? this[index + this.length] : this[index]);\n    },\n\n    index: function (elem) {\n      var child = elem ? cash(elem)[0] : this[0], collection = elem ? this : cash(child).parent().children();\n      return slice.call(collection).indexOf(child);\n    },\n\n    last: function () {\n      return this.eq(-1);\n    }\n\n  });\n\n  var camelCase = (function () {\n    var camelRegex = /(?:^\\w|[A-Z]|\\b\\w)/g, whiteSpace = /[\\s-_]+/g;\n    return function (str) {\n      return str.replace(camelRegex, function (letter, index) {\n        return letter[index === 0 ? \"toLowerCase\" : \"toUpperCase\"]();\n      }).replace(whiteSpace, \"\");\n    };\n  }());\n\n  var getPrefixedProp = (function () {\n    var cache = {}, doc = document, div = doc.createElement(\"div\"), style = div.style;\n\n    return function (prop) {\n      prop = camelCase(prop);\n      if (cache[prop]) {\n        return cache[prop];\n      }\n\n      var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1), prefixes = [\"webkit\", \"moz\", \"ms\", \"o\"], props = (prop + \" \" + (prefixes).join(ucProp + \" \") + ucProp).split(\" \");\n\n      each(props, function (p) {\n        if (p in style) {\n          cache[p] = prop = cache[prop] = p;\n          return false;\n        }\n      });\n\n      return cache[prop];\n    };\n  }());\n\n  cash.prefixedProp = getPrefixedProp;\n  cash.camelCase = camelCase;\n\n  fn.extend({\n    css: function (prop, value) {\n      if (isString(prop)) {\n        prop = getPrefixedProp(prop);\n        return (arguments.length > 1 ? this.each(function (v) {\n          return v.style[prop] = value;\n        }) : win.getComputedStyle(this[0])[prop]);\n      }\n\n      for (var key in prop) {\n        this.css(key, prop[key]);\n      }\n\n      return this;\n    }\n\n  });\n\n  function compute(el, prop) {\n    return parseInt(win.getComputedStyle(el[0], null)[prop], 10) || 0;\n  }\n\n  each([\"Width\", \"Height\"], function (v) {\n    var lower = v.toLowerCase();\n\n    fn[lower] = function () {\n      return this[0].getBoundingClientRect()[lower];\n    };\n\n    fn[\"inner\" + v] = function () {\n      return this[0][\"client\" + v];\n    };\n\n    fn[\"outer\" + v] = function (margins) {\n      return this[0][\"offset\" + v] + (margins ? compute(this, \"margin\" + (v === \"Width\" ? \"Left\" : \"Top\")) + compute(this, \"margin\" + (v === \"Width\" ? \"Right\" : \"Bottom\")) : 0);\n    };\n  });\n\n  function registerEvent(node, eventName, callback) {\n    var eventCache = getData(node, \"_cashEvents\") || setData(node, \"_cashEvents\", {});\n    eventCache[eventName] = eventCache[eventName] || [];\n    eventCache[eventName].push(callback);\n    node.addEventListener(eventName, callback);\n  }\n\n  function removeEvent(node, eventName, callback) {\n    var events = getData(node, \"_cashEvents\"), eventCache = (events && events[eventName]), index;\n\n    if (!eventCache) {\n      return;\n    }\n\n    if (callback) {\n      node.removeEventListener(eventName, callback);\n      index = eventCache.indexOf(callback);\n      if (index >= 0) {\n        eventCache.splice(index, 1);\n      }\n    } else {\n      each(eventCache, function (event) {\n        node.removeEventListener(eventName, event);\n      });\n      eventCache = [];\n    }\n  }\n\n  fn.extend({\n    off: function (eventName, callback) {\n      return this.each(function (v) {\n        return removeEvent(v, eventName, callback);\n      });\n    },\n\n    on: function (eventName, delegate, callback, runOnce) {\n      // jshint ignore:line\n\n      var originalCallback;\n\n      if (!isString(eventName)) {\n        for (var key in eventName) {\n          this.on(key, delegate, eventName[key]);\n        }\n        return this;\n      }\n\n      if (isFunction(delegate)) {\n        callback = delegate;\n        delegate = null;\n      }\n\n      if (eventName === \"ready\") {\n        onReady(callback);\n        return this;\n      }\n\n      if (delegate) {\n        originalCallback = callback;\n        callback = function (e) {\n          var t = e.target;\n\n          while (!matches(t, delegate)) {\n            if (t === this) {\n              return (t = false);\n            }\n            t = t.parentNode;\n          }\n\n          if (t) {\n            originalCallback.call(t, e);\n          }\n        };\n      }\n\n      return this.each(function (v) {\n        var finalCallback = callback;\n        if (runOnce) {\n          finalCallback = function () {\n            callback.apply(this, arguments);\n            removeEvent(v, eventName, finalCallback);\n          };\n        }\n        registerEvent(v, eventName, finalCallback);\n      });\n    },\n\n    one: function (eventName, delegate, callback) {\n      return this.on(eventName, delegate, callback, true);\n    },\n\n    ready: onReady,\n\n    trigger: function (eventName, data) {\n      var evt = doc.createEvent(\"HTMLEvents\");\n      evt.data = data;\n      evt.initEvent(eventName, true, false);\n      return this.each(function (v) {\n        return v.dispatchEvent(evt);\n      });\n    }\n\n  });\n\n  function encode(name, value) {\n    return \"&\" + encodeURIComponent(name) + \"=\" + encodeURIComponent(value).replace(/%20/g, \"+\");\n  }\n\n  function getSelectMultiple_(el) {\n    var values = [];\n    each(el.options, function (o) {\n      if (o.selected) {\n        values.push(o.value);\n      }\n    });\n    return values.length ? values : null;\n  }\n\n  function getSelectSingle_(el) {\n    var selectedIndex = el.selectedIndex;\n    return selectedIndex >= 0 ? el.options[selectedIndex].value : null;\n  }\n\n  function getValue(el) {\n    var type = el.type;\n    if (!type) {\n      return null;\n    }\n    switch (type.toLowerCase()) {\n      case \"select-one\":\n        return getSelectSingle_(el);\n      case \"select-multiple\":\n        return getSelectMultiple_(el);\n      case \"radio\":\n        return (el.checked) ? el.value : null;\n      case \"checkbox\":\n        return (el.checked) ? el.value : null;\n      default:\n        return el.value ? el.value : null;\n    }\n  }\n\n  fn.extend({\n    serialize: function () {\n      var query = \"\";\n\n      each(this[0].elements || this, function (el) {\n        if (el.disabled || el.tagName === \"FIELDSET\") {\n          return;\n        }\n        var name = el.name;\n        switch (el.type.toLowerCase()) {\n          case \"file\":\n          case \"reset\":\n          case \"submit\":\n          case \"button\":\n            break;\n          case \"select-multiple\":\n            var values = getValue(el);\n            if (values !== null) {\n              each(values, function (value) {\n                query += encode(name, value);\n              });\n            }\n            break;\n          default:\n            var value = getValue(el);\n            if (value !== null) {\n              query += encode(name, value);\n            }\n        }\n      });\n\n      return query.substr(1);\n    },\n\n    val: function (value) {\n      if (value === undefined) {\n        return getValue(this[0]);\n      } else {\n        return this.each(function (v) {\n          return v.value = value;\n        });\n      }\n    }\n\n  });\n\n  function insertElement(el, child, prepend) {\n    if (prepend) {\n      var first = el.childNodes[0];\n      el.insertBefore(child, first);\n    } else {\n      el.appendChild(child);\n    }\n  }\n\n  function insertContent(parent, child, prepend) {\n    var str = isString(child);\n\n    if (!str && child.length) {\n      each(child, function (v) {\n        return insertContent(parent, v, prepend);\n      });\n      return;\n    }\n\n    each(parent, str ? function (v) {\n      return v.insertAdjacentHTML(prepend ? \"afterbegin\" : \"beforeend\", child);\n    } : function (v, i) {\n      return insertElement(v, (i === 0 ? child : child.cloneNode(true)), prepend);\n    });\n  }\n\n  fn.extend({\n    after: function (selector) {\n      cash(selector).insertAfter(this);\n      return this;\n    },\n\n    append: function (content) {\n      insertContent(this, content);\n      return this;\n    },\n\n    appendTo: function (parent) {\n      insertContent(cash(parent), this);\n      return this;\n    },\n\n    before: function (selector) {\n      cash(selector).insertBefore(this);\n      return this;\n    },\n\n    clone: function () {\n      return cash(this.map(function (v) {\n        return v.cloneNode(true);\n      }));\n    },\n\n    empty: function () {\n      this.html(\"\");\n      return this;\n    },\n\n    html: function (content) {\n      if (content === undefined) {\n        return this[0].innerHTML;\n      }\n      var source = (content.nodeType ? content[0].outerHTML : content);\n      return this.each(function (v) {\n        return v.innerHTML = source;\n      });\n    },\n\n    insertAfter: function (selector) {\n      var _this = this;\n\n\n      cash(selector).each(function (el, i) {\n        var parent = el.parentNode, sibling = el.nextSibling;\n        _this.each(function (v) {\n          parent.insertBefore((i === 0 ? v : v.cloneNode(true)), sibling);\n        });\n      });\n\n      return this;\n    },\n\n    insertBefore: function (selector) {\n      var _this2 = this;\n      cash(selector).each(function (el, i) {\n        var parent = el.parentNode;\n        _this2.each(function (v) {\n          parent.insertBefore((i === 0 ? v : v.cloneNode(true)), el);\n        });\n      });\n      return this;\n    },\n\n    prepend: function (content) {\n      insertContent(this, content, true);\n      return this;\n    },\n\n    prependTo: function (parent) {\n      insertContent(cash(parent), this, true);\n      return this;\n    },\n\n    remove: function () {\n      return this.each(function (v) {\n        return v.parentNode.removeChild(v);\n      });\n    },\n\n    text: function (content) {\n      if (content === undefined) {\n        return this[0].textContent;\n      }\n      return this.each(function (v) {\n        return v.textContent = content;\n      });\n    }\n\n  });\n\n  var docEl = doc.documentElement;\n\n  fn.extend({\n    position: function () {\n      var el = this[0];\n      return {\n        left: el.offsetLeft,\n        top: el.offsetTop\n      };\n    },\n\n    offset: function () {\n      var rect = this[0].getBoundingClientRect();\n      return {\n        top: rect.top + win.pageYOffset - docEl.clientTop,\n        left: rect.left + win.pageXOffset - docEl.clientLeft\n      };\n    },\n\n    offsetParent: function () {\n      return cash(this[0].offsetParent);\n    }\n\n  });\n\n  fn.extend({\n    children: function (selector) {\n      var elems = [];\n      this.each(function (el) {\n        push.apply(elems, el.children);\n      });\n      elems = unique(elems);\n\n      return (!selector ? elems : elems.filter(function (v) {\n        return matches(v, selector);\n      }));\n    },\n\n    closest: function (selector) {\n      if (!selector || this.length < 1) {\n        return cash();\n      }\n      if (this.is(selector)) {\n        return this.filter(selector);\n      }\n      return this.parent().closest(selector);\n    },\n\n    is: function (selector) {\n      if (!selector) {\n        return false;\n      }\n\n      var match = false, comparator = getCompareFunction(selector);\n\n      this.each(function (el) {\n        match = comparator(el, selector);\n        return !match;\n      });\n\n      return match;\n    },\n\n    find: function (selector) {\n      if (!selector || selector.nodeType) {\n        return cash(selector && this.has(selector).length ? selector : null);\n      }\n\n      var elems = [];\n      this.each(function (el) {\n        push.apply(elems, find(selector, el));\n      });\n\n      return unique(elems);\n    },\n\n    has: function (selector) {\n      var comparator = (isString(selector) ? function (el) {\n        return find(selector, el).length !== 0;\n      } : function (el) {\n        return el.contains(selector);\n      });\n\n      return this.filter(comparator);\n    },\n\n    next: function () {\n      return cash(this[0].nextElementSibling);\n    },\n\n    not: function (selector) {\n      if (!selector) {\n        return this;\n      }\n\n      var comparator = getCompareFunction(selector);\n\n      return this.filter(function (el) {\n        return !comparator(el, selector);\n      });\n    },\n\n    parent: function () {\n      var result = [];\n\n      this.each(function (item) {\n        if (item && item.parentNode) {\n          result.push(item.parentNode);\n        }\n      });\n\n      return unique(result);\n    },\n\n    parents: function (selector) {\n      var last, result = [];\n\n      this.each(function (item) {\n        last = item;\n\n        while (last && last.parentNode && last !== doc.body.parentNode) {\n          last = last.parentNode;\n\n          if (!selector || (selector && matches(last, selector))) {\n            result.push(last);\n          }\n        }\n      });\n\n      return unique(result);\n    },\n\n    prev: function () {\n      return cash(this[0].previousElementSibling);\n    },\n\n    siblings: function () {\n      var collection = this.parent().children(), el = this[0];\n\n      return collection.filter(function (i) {\n        return i !== el;\n      });\n    }\n\n  });\n\n\n  return cash;\n});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__flyin_js__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__slider_js__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__overflow_js__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__toggle_js__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__fadeSiblings_js__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_tooltip_js__ = __webpack_require__(7);\n// import 'jquery-3.2.1.slim.min.js';\n// import 'flyin.js';\n// import 'tooltip.js';\n\n\n\n\n\n\n\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cash_dom__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cash_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_cash_dom__);\n\n// import $ from 'jquery-slim';\n\nvar siteWrapper = document.getElementById(\"siteWrapper\"),\n    allowScrolling = true;\n\n/**\n * open and close mobile nav\n */\n__WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(\".jsFlyinBtn\").on( \"click\", toggleFlyin );\n\nfunction toggleFlyin( event ) {\n    var target = __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this).attr('data-target');\n    if( __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this).attr('data-action') == 'open' ) {\n        __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()('#'+target).addClass('c-flyin--open');\n        __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(siteWrapper).addClass('c-site-wrapper--faded');\n        allowScrolling = false;\n    } else {\n        __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()('#'+target).removeClass('c-flyin--open');\n        __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(siteWrapper).removeClass('c-site-wrapper--faded');\n        allowScrolling = true;\n    }\n}\n\n/**\n * Enable/Disable scrolling on #siteWrapper when mobile nav is open\n * on iPhone/iPad’s Safari\n */\nif( siteWrapper ) {\n    siteWrapper.ontouchmove = function (e) {\n        if(allowScrolling) {\n            return true; // Enable scrolling.\n        } else {\n            e.preventDefault(); // Disable scrolling.\n        }\n    }\n}\n\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cash_dom__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cash_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_cash_dom__);\n/*\n * Joel Media Slider\n * @author: Lukas Hermann\n */\n\n\n// import $ from 'jquery-slim';\n\n/* Keep in sync with _components.slider.scss */\nvar sliders = [\n    {\n        slideDuration:   3000,\n        slideTransition: 800,\n        slideDelay:      200,\n        automatic:       \"initial\",\n        node:            __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(\"#mainSlider\"),\n        object:          false\n    },\n    {\n        slideDuration:   8000,\n        slideTransition: 800,\n        slideDelay:      200,\n        automatic:       \"always\",\n        node:            __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(\"#quoteSlider\"),\n        object:          false\n    }\n]\n\nvar slideDuration   = 3000;\nvar slideTransition = 800;\nvar slideDelay      = 200;\n\nvar mainSlider = __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(\"#mainSlider\");\nvar quoteSlider = __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(\"#quoteSlider\");\n\nfunction mod(n, m) {\n    return ((n % m) + m) % m;\n}\n\n// holder class for each slide\nfunction Slide(id, slide, nav, slideTransition) {\n\n    this.id = id;\n    this.slide = slide;\n    this.nav = nav;\n    this.class = \"\";\n    this.zIndex = false;\n    this.slideTransition = typeof slideTransition === 'number' ? slideTransition : 800;\n\n    this.setZIndex = function(z) {\n        __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.slide).css( \"z-index\", z );\n        this.zIndex = z;\n    };\n\n    this.activateNav = function() {\n        __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.nav).addClass('is-active');\n    };\n\n    this.deactivateNav = function() {\n        __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.nav).removeClass('is-active');\n    };\n\n    this.animateEnter = function() {\n        this.add('is-entering');\n        setTimeout(function(obj) {\n            obj.rm('is-entering');\n        }, slideTransition, this);\n    };\n\n    this.animateLeave = function() {\n        this.add('is-leaving');\n        setTimeout(function(obj) {\n            obj.rm('is-leaving');\n        }, slideTransition, this);\n    };\n\n    this.add = function(cssClass) {\n        __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.slide).addClass(cssClass);\n    };\n\n    this.rm = function(cssClass) {\n        __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.slide).removeClass(cssClass);\n    };\n}\n\n// slider with its methods\nfunction Slider(slider, slideDelay, slideTransition) {\n\n    var sliderList = __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(slider).find('.jsSliderList').children();\n    var sliderNav = __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(slider).find('.jsSliderNav').children();\n\n    // populate slides array\n    var slides = [];\n    __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(sliderList).each(function( value, index ) {\n        slides.push( new Slide(\n            index+1,\n            this,\n            __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(sliderNav[index]).get(0),\n            slideTransition\n        ));\n    })\n\n    // bring slide array into initial order\n    slides\n        .reverse()\n        .unshift(slides.pop());\n\n    // Slide Stack\n    this.slideStack = slides;\n    this.slideCount = slides.length;\n    this.currentSlide = 1;\n\n    // slider\n    this.slider = slider;\n    this.numChanged = 0;\n    this.isAutomatic = true;\n    this.intervalId = 0;\n\n    // timing\n    this.slideDelay = typeof slideDelay === 'number' ? slideDelay : 200;\n\n    // setup dom\n\n    this.setZIndices = function() {\n        var slideCount = this.slideCount;\n        this.slideStack.forEach( function(slide, index) {\n            slide.setZIndex( slideCount - index );\n        });\n    }\n    this.setZIndices();\n\n    this.setActiveNav = function() {\n        this.slideStack.forEach( function(slide, index) {\n            if( index == 0 ) {\n                slide.activateNav();\n            } else {\n                slide.deactivateNav();\n            }\n        });\n    }\n    this.setActiveNav();\n\n    this.transitionSlide = function(direction) {\n        this.setZIndices();\n        this.setActiveNav();\n\n        if(direction == 'backwards') {\n            (this.slideStack[ this.slideStack.length - 1 ]).animateLeave();\n        } else {\n            (this.slideStack[0]).animateEnter();\n        }\n    }\n\n    /*\n     * Interval Function handles one single slide transition\n     */\n    this.intervalFunction = function(obj, id) {\n        console.log(\"currentSlide \" + obj.currentSlide);\n        if( obj.currentSlide == id ) {\n            clearInterval(obj.intervalId);\n            return true;\n        }\n\n        if( id > obj.currentSlide ) {\n            obj.slideStack.unshift( obj.slideStack.pop() );\n            obj.transitionSlide('forwards');\n        } else {\n            obj.slideStack.push( obj.slideStack.shift() );\n            obj.transitionSlide('backwards');\n        }\n\n        console.log(obj.slideStack);\n        obj.currentSlide = obj.slideStack[0].id;\n\n        if( obj.currentSlide == id ) {\n            clearInterval(obj.intervalId);\n            return true;\n        }\n        return false;\n    }\n\n    /*\n     * Change to slide with id\n     */\n    this.slide = function(id) {\n        console.log(\"target id \" + id);\n\n        this.intervalFunction(this, id);\n        this.intervalId = setInterval( this.intervalFunction, this.slideDelay, this, id);\n\n        if( this.numChanged++ >= this.slideCount - 1 ) {\n            this.deactivateAutomatic();\n        }\n    }\n\n    /*\n     * Change to next slide\n     */\n    this.nextSlide = function() {\n        if( this.currentSlide == this.slideCount ) {\n            this.slide( 1 )\n        } else {\n            this.slide( this.currentSlide + 1 )\n        }\n    }\n\n    /*\n     * Change to previous slide\n     */\n    this.previousSlide = function() {\n        if( this.currentSlide == 1 ) {\n            this.slide( this.slideCount )\n        } else {\n            this.slide( this.currentSlide - 1 )\n        }\n    }\n\n    /*\n     * Deactivate automatic changing of slides\n     */\n    this.deactivateAutomatic = function() {\n        if( this.isAutomatic == true ) {\n            __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.slider).removeClass('is-automatic');\n            this.isAutomatic = false;\n        }\n    }\n\n}\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(document).ready( function() {\n\n    __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(\".jsSliderNav a\").on(\"click\", function( event ) {\n        event.preventDefault();\n    });\n\n    /*\n     * A little timeout is necessary otherwise the animation classes will be\n     * added before css is done parsing, thus not showing transition effects\n     */\n    setTimeout(function() {\n\n        sliders.forEach(function(slider) {\n\n            if( __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(slider.node).length ) {\n\n                slider.object = new Slider( slider.node, slider.slideDelay, slider.slideTransition );\n\n                // attach event handler to buttons\n                __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(\".jsSliderBtn\").on( \"click\", function(event){\n                    slider.object.deactivateAutomatic();\n                    if( __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this).attr('data') == 'next' ) {\n                        slider.object.nextSlide();\n                    } else {\n                        slider.object.previousSlide();\n                    }\n                });\n\n                // attach event handler to slider navigation\n                __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(\".jsSliderNav li\").on( \"click\", function(event){\n                    event.preventDefault();\n                    slider.object.deactivateAutomatic();\n                    slider.object.slide( __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this).attr('data') );\n                })\n\n                switch(slider.automatic) {\n                    case \"initial\":\n                        setInterval( function(){\n                            if( slider.object.isAutomatic ) {\n                                slider.object.nextSlide();\n                            }\n                        }, slider.slideDuration );\n                        break;\n\n                    case \"always\":\n                        setInterval( function(){\n                            slider.object.nextSlide();\n                        }, slider.slideDuration );\n                        break;\n                }\n\n            }\n\n        });\n\n    }, 300);\n\n});\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cash_dom__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cash_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_cash_dom__);\n/**\n * Overflow controlls horizontal content that is cut off because of the width of\n * the screen and provides controlls for it\n */\n\n\n// import $ from 'jquery-slim';\n\n\n/*\n * Initiate variables\n * 1. Width of one of the nav buttons\n */\nvar overflowNavWidth = 42, /* 1 */\n    overflowArray = [];\n\n/*\n * Class for .o-overflow objects\n */\nfunction Overflow(container) {\n    this.container     = container;\n    this.content       = __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(container).find(\".o-overflow__content\").get(0);\n    this.count         = __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.content).children().length;\n    this.childrenWidth = parseInt(__WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.content).children().first().width());\n    this.spaceBetween  = parseInt(__WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.content).data(\"space-between\"));\n    this.innerWidth    = parseInt(this.count * this.childrenWidth + this.spaceBetween);\n    this.outerWidth    = parseInt(__WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.container).width());\n    this.currentPos    = 0;\n    this.state         = \"is-left\";\n    // console.log( \"this.childrenWidth \" + this.childrenWidth );\n    // console.log( \"this.spaceBetween \" + this.spaceBetween );\n    // console.log( \"this.innerWidth \" + this.innerWidth );\n    // console.log( \"this.outerWidth \" + this.outerWidth );\n\n    this.getShiftWidth = function(direction) {\n        var shiftCount = Math.round( (this.outerWidth - overflowNavWidth) / this.childrenWidth ),\n            shiftWidth = this.childrenWidth * shiftCount;\n\n        switch (direction) {\n          case \"left\":\n            if( this.currentPos - shiftWidth >= 0 ) {\n                return shiftWidth;\n            } else {\n                return this.currentPos;\n            }\n            break;\n          case \"right\":\n          default:\n            if( this.currentPos + shiftWidth + this.outerWidth <= this.innerWidth ) {\n                return shiftWidth;\n            } else {\n                return this.innerWidth - this.outerWidth - this.currentPos;\n            }\n            break;\n        }\n    };\n\n    this.shiftRight = function() {\n        var shift = this.getShiftWidth(\"right\");\n        this.currentPos += shift\n        this.setContentX( this.currentPos );\n        this.updateContainerState();\n    };\n\n    this.shiftLeft = function() {\n        var shift = this.getShiftWidth(\"left\");\n        this.currentPos -= shift;\n        this.setContentX( this.currentPos );\n        this.updateContainerState();\n    }\n\n    this.setContentX = function(x) {\n        __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.content).css( \"transform\", \"translateX(-\" + x + \"px)\" );\n    };\n\n    /*\n     * Add a little bit of wiggle room\n     */\n    this.updateContainerState = function() {\n        __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.container).removeClass( this.state );\n        if( this.currentPos <= 1 ) { /* 1 */\n            __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.container).addClass( \"is-left\" );\n            this.state = \"is-left\";\n        } else if( this.currentPos >= this.innerWidth - this.outerWidth ) {\n            __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.container).addClass( \"is-right\" );\n            this.state = \"is-right\";\n        } else {\n            __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this.container).addClass( \"is-middle\" );\n            this.state = \"is-middle\";\n        }\n    };\n\n    this.updateContainerWidth = function() {\n        if( this.currentPos > this.innerWidth - this.outerWidth ) {\n            this.currentPos = this.innerWidth - this.outerWidth;\n            this.setContentX( this.currentPos );\n        }\n        this.updateContainerState();\n    };\n\n    this.updateContainerWidth();\n}\n\n/*\n * Initiate objects for overflow elements\n */\n__WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(\".o-overflow\").each( function(element, i) {\n\n    overflowArray.push( new Overflow(element) );\n\n    __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(overflowArray[i].container).find(\".jsNavLeft\").on( \"click\", function(event){\n        overflowArray[i].shiftLeft();\n    });\n\n    __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(overflowArray[i].container).find(\".jsNavRight\").on( \"click\", function(event){\n        overflowArray[i].shiftRight();\n    });\n\n});\n\n/*\n * Adapt responsively to viewport changes\n */\n__WEBPACK_IMPORTED_MODULE_0_cash_dom___default()( window ).on(\"resize\", function() {\n    overflowArray.forEach( function(overflow) {\n        overflow.updateContainerWidth();\n    })\n});\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cash_dom__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cash_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_cash_dom__);\n/**\n * Have a button toggle a class on a target\n *\n * data-target - the target selector \".o-example\". Target must be\n *               sibling of button.\n * data-class  - the class that is being toggled on the target\n *\n * Toggles the \"is-hidden\" class on its own children if it exists, eg:\n * <button class=\"jsToggle\">\n *   <span>more</span>\n *   <span class=\"u-hidden\">less</span>\n * </button>\n */\n\n\n// import $ from 'jquery-slim';\n\n__WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(\".jsToggle\").on(\"click\", function(e){\n    var target = __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this).attr(\"data-target\"),\n        css = __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this).attr(\"data-class\"),\n        children = __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this).children();\n    __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this).siblings(target).toggleClass(css);\n    if( __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(children).hasClass(\"u-hidden\") ) {\n        __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(children).toggleClass(\"u-hidden\");\n    }\n});\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cash_dom__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cash_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_cash_dom__);\n/**\n * Add class .is-faded to all Siblings during hover\n *\n */\n\n\n// import $ from 'jquery-slim';\n\n__WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(\".jsFadeSiblings\").on(\"mouseenter\", function(e){\n    __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this).siblings().addClass(\"is-faded\");\n}).on(\"mouseleave\", function(e){\n    __WEBPACK_IMPORTED_MODULE_0_cash_dom___default()(this).siblings().removeClass(\"is-faded\");\n});\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_popper_js__ = __webpack_require__(8);\n/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.1.5\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar DEFAULT_OPTIONS = {\n  container: false,\n  delay: 0,\n  html: false,\n  placement: 'top',\n  title: '',\n  template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n  trigger: 'hover focus',\n  offset: 0\n};\n\nvar Tooltip = function () {\n  /**\n   * Create a new Tooltip.js instance\n   * @class Tooltip\n   * @param {HTMLElement} reference - The DOM node used as reference of the tooltip (it can be a jQuery element).\n   * @param {Object} options\n   * @param {String} options.placement=bottom\n   *      Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -end),\n   *      left(-start, -end)`\n   * @param {HTMLElement|String|false} options.container=false - Append the tooltip to a specific element.\n   * @param {Number|Object} options.delay=0\n   *      Delay showing and hiding the tooltip (ms) - does not apply to manual trigger type.\n   *      If a number is supplied, delay is applied to both hide/show.\n   *      Object structure is: `{ show: 500, hide: 100 }`\n   * @param {Boolean} options.html=false - Insert HTML into the tooltip. If false, the content will inserted with `innerText`.\n   * @param {String|PlacementFunction} options.placement='top' - One of the allowed placements, or a function returning one of them.\n   * @param {String} [options.template='<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>']\n   *      Base HTML to used when creating the tooltip.\n   *      The tooltip's `title` will be injected into the `.tooltip-inner` or `.tooltip__inner`.\n   *      `.tooltip-arrow` or `.tooltip__arrow` will become the tooltip's arrow.\n   *      The outermost wrapper element should have the `.tooltip` class.\n   * @param {String|HTMLElement|TitleFunction} options.title='' - Default title value if `title` attribute isn't present.\n   * @param {String} [options.trigger='hover focus']\n   *      How tooltip is triggered - click, hover, focus, manual.\n   *      You may pass multiple triggers; separate them with a space. `manual` cannot be combined with any other trigger.\n   * @param {HTMLElement} options.boundariesElement\n   *      The element used as boundaries for the tooltip. For more information refer to Popper.js'\n   *      [boundariesElement docs](https://popper.js.org/popper-documentation.html)\n   * @param {Number|String} options.offset=0 - Offset of the tooltip relative to its reference. For more information refer to Popper.js'\n   *      [offset docs](https://popper.js.org/popper-documentation.html)\n   * @param {Object} options.popperOptions={} - Popper options, will be passed directly to popper instance. For more information refer to Popper.js'\n   *      [options docs](https://popper.js.org/popper-documentation.html)\n   * @return {Object} instance - The generated tooltip instance\n   */\n  function Tooltip(reference, options) {\n    classCallCheck(this, Tooltip);\n\n    _initialiseProps.call(this);\n\n    // apply user options over default ones\n    options = _extends({}, DEFAULT_OPTIONS, options);\n\n    reference.jquery && (reference = reference[0]);\n\n    // cache reference and options\n    this.reference = reference;\n    this.options = options;\n\n    // get events list\n    var events = typeof options.trigger === 'string' ? options.trigger.split(' ').filter(function (trigger) {\n      return ['click', 'hover', 'focus'].indexOf(trigger) !== -1;\n    }) : [];\n\n    // set initial state\n    this._isOpen = false;\n\n    // set event listeners\n    this._setEventListeners(reference, events, options);\n  }\n\n  //\n  // Public methods\n  //\n\n  /**\n   * Reveals an element's tooltip. This is considered a \"manual\" triggering of the tooltip.\n   * Tooltips with zero-length titles are never displayed.\n   * @method Tooltip#show\n   * @memberof Tooltip\n   */\n\n\n  /**\n   * Hides an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n   * @method Tooltip#hide\n   * @memberof Tooltip\n   */\n\n\n  /**\n   * Hides and destroys an element’s tooltip.\n   * @method Tooltip#dispose\n   * @memberof Tooltip\n   */\n\n\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n   * @method Tooltip#toggle\n   * @memberof Tooltip\n   */\n\n\n  //\n  // Defaults\n  //\n\n\n  //\n  // Private methods\n  //\n\n  createClass(Tooltip, [{\n    key: '_create',\n\n\n    /**\n     * Creates a new tooltip node\n     * @memberof Tooltip\n     * @private\n     * @param {HTMLElement} reference\n     * @param {String} template\n     * @param {String|HTMLElement|TitleFunction} title\n     * @param {Boolean} allowHtml\n     * @return {HTMLelement} tooltipNode\n     */\n    value: function _create(reference, template, title, allowHtml) {\n      // create tooltip element\n      var tooltipGenerator = window.document.createElement('div');\n      tooltipGenerator.innerHTML = template.trim();\n      var tooltipNode = tooltipGenerator.childNodes[0];\n\n      // add unique ID to our tooltip (needed for accessibility reasons)\n      tooltipNode.id = 'tooltip_' + Math.random().toString(36).substr(2, 10);\n\n      // set initial `aria-hidden` state to `false` (it's visible!)\n      tooltipNode.setAttribute('aria-hidden', 'false');\n\n      // add title to tooltip\n      var titleNode = tooltipGenerator.querySelector(this.innerSelector);\n      if (title.nodeType === 1) {\n        // if title is a node, append it only if allowHtml is true\n        allowHtml && titleNode.appendChild(title);\n      } else if (isFunction(title)) {\n        // if title is a function, call it and set innerText or innerHtml depending by `allowHtml` value\n        var titleText = title.call(reference);\n        allowHtml ? titleNode.innerHTML = titleText : titleNode.innerText = titleText;\n      } else {\n        // if it's just a simple text, set innerText or innerHtml depending by `allowHtml` value\n        allowHtml ? titleNode.innerHTML = title : titleNode.innerText = title;\n      }\n\n      // return the generated tooltip node\n      return tooltipNode;\n    }\n  }, {\n    key: '_show',\n    value: function _show(reference, options) {\n      // don't show if it's already visible\n      if (this._isOpen) {\n        return this;\n      }\n      this._isOpen = true;\n\n      // if the tooltipNode already exists, just show it\n      if (this._tooltipNode) {\n        this._tooltipNode.style.display = '';\n        this._tooltipNode.setAttribute('aria-hidden', 'false');\n        this.popperInstance.update();\n        return this;\n      }\n\n      // get title\n      var title = reference.getAttribute('title') || options.title;\n\n      // don't show tooltip if no title is defined\n      if (!title) {\n        return this;\n      }\n\n      // create tooltip node\n      var tooltipNode = this._create(reference, options.template, title, options.html);\n\n      // Add `aria-describedby` to our reference element for accessibility reasons\n      reference.setAttribute('aria-describedby', tooltipNode.id);\n\n      // append tooltip to container\n      var container = this._findContainer(options.container, reference);\n\n      this._append(tooltipNode, container);\n\n      var popperOptions = _extends({}, options.popperOptions, {\n        placement: options.placement\n      });\n\n      popperOptions.modifiers = _extends({}, popperOptions.modifiers, {\n        arrow: {\n          element: this.arrowSelector\n        }\n      });\n\n      if (options.boundariesElement) {\n        popperOptions.modifiers.preventOverflow = {\n          boundariesElement: options.boundariesElement\n        };\n      }\n\n      this.popperInstance = new __WEBPACK_IMPORTED_MODULE_0_popper_js__[\"a\" /* default */](reference, tooltipNode, popperOptions);\n\n      this._tooltipNode = tooltipNode;\n\n      return this;\n    }\n  }, {\n    key: '_hide',\n    value: function _hide() /*reference, options*/{\n      // don't hide if it's already hidden\n      if (!this._isOpen) {\n        return this;\n      }\n\n      this._isOpen = false;\n\n      // hide tooltipNode\n      this._tooltipNode.style.display = 'none';\n      this._tooltipNode.setAttribute('aria-hidden', 'true');\n\n      return this;\n    }\n  }, {\n    key: '_dispose',\n    value: function _dispose() {\n      var _this = this;\n\n      if (this._tooltipNode) {\n        this._hide();\n\n        // destroy instance\n        this.popperInstance.destroy();\n\n        // remove event listeners\n        this._events.forEach(function (_ref) {\n          var func = _ref.func,\n              event = _ref.event;\n\n          _this.reference.removeEventListener(event, func);\n        });\n        this._events = [];\n\n        // destroy tooltipNode\n        this._tooltipNode.parentNode.removeChild(this._tooltipNode);\n        this._tooltipNode = null;\n      }\n      return this;\n    }\n  }, {\n    key: '_findContainer',\n    value: function _findContainer(container, reference) {\n      // if container is a query, get the relative element\n      if (typeof container === 'string') {\n        container = window.document.querySelector(container);\n      } else if (container === false) {\n        // if container is `false`, set it to reference parent\n        container = reference.parentNode;\n      }\n      return container;\n    }\n\n    /**\n     * Append tooltip to container\n     * @memberof Tooltip\n     * @private\n     * @param {HTMLElement} tooltip\n     * @param {HTMLElement|String|false} container\n     */\n\n  }, {\n    key: '_append',\n    value: function _append(tooltipNode, container) {\n      container.appendChild(tooltipNode);\n    }\n  }, {\n    key: '_setEventListeners',\n    value: function _setEventListeners(reference, events, options) {\n      var _this2 = this;\n\n      var directEvents = [];\n      var oppositeEvents = [];\n\n      events.forEach(function (event) {\n        switch (event) {\n          case 'hover':\n            directEvents.push('mouseenter');\n            oppositeEvents.push('mouseleave');\n            break;\n          case 'focus':\n            directEvents.push('focus');\n            oppositeEvents.push('blur');\n            break;\n          case 'click':\n            directEvents.push('click');\n            oppositeEvents.push('click');\n            break;\n        }\n      });\n\n      // schedule show tooltip\n      directEvents.forEach(function (event) {\n        var func = function func(evt) {\n          if (_this2._isOpen === true) {\n            return;\n          }\n          evt.usedByTooltip = true;\n          _this2._scheduleShow(reference, options.delay, options, evt);\n        };\n        _this2._events.push({ event: event, func: func });\n        reference.addEventListener(event, func);\n      });\n\n      // schedule hide tooltip\n      oppositeEvents.forEach(function (event) {\n        var func = function func(evt) {\n          if (evt.usedByTooltip === true) {\n            return;\n          }\n          _this2._scheduleHide(reference, options.delay, options, evt);\n        };\n        _this2._events.push({ event: event, func: func });\n        reference.addEventListener(event, func);\n      });\n    }\n  }, {\n    key: '_scheduleShow',\n    value: function _scheduleShow(reference, delay, options /*, evt */) {\n      var _this3 = this;\n\n      // defaults to 0\n      var computedDelay = delay && delay.show || delay || 0;\n      window.setTimeout(function () {\n        return _this3._show(reference, options);\n      }, computedDelay);\n    }\n  }, {\n    key: '_scheduleHide',\n    value: function _scheduleHide(reference, delay, options, evt) {\n      var _this4 = this;\n\n      // defaults to 0\n      var computedDelay = delay && delay.hide || delay || 0;\n      window.setTimeout(function () {\n        if (_this4._isOpen === false) {\n          return;\n        }\n        if (!document.body.contains(_this4._tooltipNode)) {\n          return;\n        }\n\n        // if we are hiding because of a mouseleave, we must check that the new\n        // reference isn't the tooltip, because in this case we don't want to hide it\n        if (evt.type === 'mouseleave') {\n          var isSet = _this4._setTooltipNodeEvent(evt, reference, delay, options);\n\n          // if we set the new event, don't hide the tooltip yet\n          // the new event will take care to hide it if necessary\n          if (isSet) {\n            return;\n          }\n        }\n\n        _this4._hide(reference, options);\n      }, computedDelay);\n    }\n  }]);\n  return Tooltip;\n}();\n\n/**\n * Placement function, its context is the Tooltip instance.\n * @memberof Tooltip\n * @callback PlacementFunction\n * @param {HTMLElement} tooltip - tooltip DOM node.\n * @param {HTMLElement} reference - reference DOM node.\n * @return {String} placement - One of the allowed placement options.\n */\n\n/**\n * Title function, its context is the Tooltip instance.\n * @memberof Tooltip\n * @callback TitleFunction\n * @return {String} placement - The desired title.\n */\n\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this5 = this;\n\n  this.show = function () {\n    return _this5._show(_this5.reference, _this5.options);\n  };\n\n  this.hide = function () {\n    return _this5._hide();\n  };\n\n  this.dispose = function () {\n    return _this5._dispose();\n  };\n\n  this.toggle = function () {\n    if (_this5._isOpen) {\n      return _this5.hide();\n    } else {\n      return _this5.show();\n    }\n  };\n\n  this.arrowSelector = '.tooltip-arrow, .tooltip__arrow';\n  this.innerSelector = '.tooltip-inner, .tooltip__inner';\n  this._events = [];\n\n  this._setTooltipNodeEvent = function (evt, reference, delay, options) {\n    var relatedreference = evt.relatedreference || evt.toElement;\n\n    var callback = function callback(evt2) {\n      var relatedreference2 = evt2.relatedreference || evt2.toElement;\n\n      // Remove event listener after call\n      _this5._tooltipNode.removeEventListener(evt.type, callback);\n\n      // If the new reference is not the reference element\n      if (!reference.contains(relatedreference2)) {\n        // Schedule to hide tooltip\n        _this5._scheduleHide(reference, options.delay, options, evt2);\n      }\n    };\n\n    if (_this5._tooltipNode.contains(relatedreference)) {\n      // listen to mouseleave on the tooltip element to be able to hide the tooltip\n      _this5._tooltipNode.addEventListener(evt.type, callback);\n      return true;\n    }\n\n    return false;\n  };\n};\n\n/* unused harmony default export */ var _unused_webpack_default_export = (Tooltip);\n//# sourceMappingURL=tooltip.js.map\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.12.3\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar nativeHints = ['native code', '[object MutationObserverConstructor]'];\n\n/**\n * Determine if a function is implemented natively (as opposed to a polyfill).\n * @method\n * @memberof Popper.Utils\n * @argument {Function | undefined} fn the function to check\n * @returns {Boolean}\n */\nvar isNative = (function (fn) {\n  return nativeHints.some(function (hint) {\n    return (fn || '').toString().indexOf(hint) > -1;\n  });\n});\n\nvar isBrowser = typeof window !== 'undefined';\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var scheduled = false;\n  var i = 0;\n  var elem = document.createElement('span');\n\n  // MutationObserver provides a mechanism for scheduling microtasks, which\n  // are scheduled *before* the next task. This gives us a way to debounce\n  // a function but ensure it's called *before* the next paint.\n  var observer = new MutationObserver(function () {\n    fn();\n    scheduled = false;\n  });\n\n  observer.observe(elem, { attributes: true });\n\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      elem.setAttribute('x-index', i);\n      i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8\n    }\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\n// It's common for MutationObserver polyfills to be seen in the wild, however\n// these rely on Mutation Events which only occur when an element is connected\n// to the DOM. The algorithm used in this module does not use a connected element,\n// and so we must ensure that a *native* MutationObserver is available.\nvar supportsNativeMutationObserver = isBrowser && isNative(window.MutationObserver);\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsNativeMutationObserver ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1) {\n    return window.document.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  var offsetParent = element && element.offsetParent;\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return window.document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return window.document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = window.document.documentElement;\n    var scrollingElement = window.document.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return +styles['border' + sideA + 'Width'].split('px')[0] + +styles['border' + sideB + 'Width'].split('px')[0];\n}\n\n/**\n * Tells if you are running Internet Explorer 10\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean} isIE10\n */\nvar isIE10 = undefined;\n\nvar isIE10$1 = function () {\n  if (isIE10 === undefined) {\n    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  }\n  return isIE10;\n};\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE10$1() ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n}\n\nfunction getWindowSizes() {\n  var body = window.document.body;\n  var html = window.document.documentElement;\n  var computedStyle = isIE10$1() && window.getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10$1()) {\n    try {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } catch (err) {}\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var isIE10 = isIE10$1();\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = +styles.borderTopWidth.split('px')[0];\n  var borderLeftWidth = +styles.borderLeftWidth.split('px')[0];\n\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = +styles.marginTop.split('px')[0];\n    var marginLeft = +styles.marginLeft.split('px')[0];\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var html = window.document.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = getScroll(html);\n  var scrollLeft = getScroll(html, 'left');\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  // NOTE: 1 DOM access here\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(popper));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = window.document.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = window.document.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier.function) {\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier.function || modifier.fn;\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n  data.offsets.popper.position = 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length - 1; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof window.document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.left = '';\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? window : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  window.addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  window.removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    window.cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // floor sides to avoid blurry text\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.floor(popper.top),\n    bottom: Math.floor(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var popperMarginSide = getStyleComputedProperty(data.instance.popper, 'margin' + sideCapitalized).replace('px', '');\n  var sideValue = center - getClientRect(data.offsets.popper)[side] - popperMarginSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {};\n  data.offsets.arrow[side] = Math.round(sideValue);\n  data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement);\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference.jquery ? reference[0] : reference;\n    this.popper = popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Popper);\n//# sourceMappingURL=popper.js.map\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(9)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 844402d51859814b438f","\"use strict\";\n\n/*! cash-dom 1.3.5, https://github.com/kenwheeler/cash @license MIT */\n;(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(factory);\n  } else if (typeof exports !== \"undefined\") {\n    module.exports = factory();\n  } else {\n    root.cash = root.$ = factory();\n  }\n})(this, function () {\n  var doc = document, win = window, ArrayProto = Array.prototype, slice = ArrayProto.slice, filter = ArrayProto.filter, push = ArrayProto.push;\n\n  var noop = function () {}, isFunction = function (item) {\n    // @see https://crbug.com/568448\n    return typeof item === typeof noop && item.call;\n  }, isString = function (item) {\n    return typeof item === typeof \"\";\n  };\n\n  var idMatch = /^#[\\w-]*$/, classMatch = /^\\.[\\w-]*$/, htmlMatch = /<.+>/, singlet = /^\\w+$/;\n\n  function find(selector, context) {\n    context = context || doc;\n    var elems = (classMatch.test(selector) ? context.getElementsByClassName(selector.slice(1)) : singlet.test(selector) ? context.getElementsByTagName(selector) : context.querySelectorAll(selector));\n    return elems;\n  }\n\n  var frag;\n  function parseHTML(str) {\n    if (!frag) {\n      frag = doc.implementation.createHTMLDocument();\n      var base = frag.createElement(\"base\");\n      base.href = doc.location.href;\n      frag.head.appendChild(base);\n    }\n\n    frag.body.innerHTML = str;\n\n    return frag.body.childNodes;\n  }\n\n  function onReady(fn) {\n    if (doc.readyState !== \"loading\") {\n      fn();\n    } else {\n      doc.addEventListener(\"DOMContentLoaded\", fn);\n    }\n  }\n\n  function Init(selector, context) {\n    if (!selector) {\n      return this;\n    }\n\n    // If already a cash collection, don't do any further processing\n    if (selector.cash && selector !== win) {\n      return selector;\n    }\n\n    var elems = selector, i = 0, length;\n\n    if (isString(selector)) {\n      elems = (idMatch.test(selector) ?\n      // If an ID use the faster getElementById check\n      doc.getElementById(selector.slice(1)) : htmlMatch.test(selector) ?\n      // If HTML, parse it into real elements\n      parseHTML(selector) :\n      // else use `find`\n      find(selector, context));\n\n      // If function, use as shortcut for DOM ready\n    } else if (isFunction(selector)) {\n      onReady(selector);return this;\n    }\n\n    if (!elems) {\n      return this;\n    }\n\n    // If a single DOM element is passed in or received via ID, return the single element\n    if (elems.nodeType || elems === win) {\n      this[0] = elems;\n      this.length = 1;\n    } else {\n      // Treat like an array and loop through each item.\n      length = this.length = elems.length;\n      for (; i < length; i++) {\n        this[i] = elems[i];\n      }\n    }\n\n    return this;\n  }\n\n  function cash(selector, context) {\n    return new Init(selector, context);\n  }\n\n  var fn = cash.fn = cash.prototype = Init.prototype = { // jshint ignore:line\n    cash: true,\n    length: 0,\n    push: push,\n    splice: ArrayProto.splice,\n    map: ArrayProto.map,\n    init: Init\n  };\n\n  Object.defineProperty(fn, \"constructor\", { value: cash });\n\n  cash.parseHTML = parseHTML;\n  cash.noop = noop;\n  cash.isFunction = isFunction;\n  cash.isString = isString;\n\n  cash.extend = fn.extend = function (target) {\n    target = target || {};\n\n    var args = slice.call(arguments), length = args.length, i = 1;\n\n    if (args.length === 1) {\n      target = this;\n      i = 0;\n    }\n\n    for (; i < length; i++) {\n      if (!args[i]) {\n        continue;\n      }\n      for (var key in args[i]) {\n        if (args[i].hasOwnProperty(key)) {\n          target[key] = args[i][key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function each(collection, callback) {\n    var l = collection.length, i = 0;\n\n    for (; i < l; i++) {\n      if (callback.call(collection[i], collection[i], i, collection) === false) {\n        break;\n      }\n    }\n  }\n\n  function matches(el, selector) {\n    var m = el && (el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector || el.oMatchesSelector);\n    return !!m && m.call(el, selector);\n  }\n\n  function getCompareFunction(selector) {\n    return (\n    /* Use browser's `matches` function if string */\n    isString(selector) ? matches :\n    /* Match a cash element */\n    selector.cash ? function (el) {\n      return selector.is(el);\n    } :\n    /* Direct comparison */\n    function (el, selector) {\n      return el === selector;\n    });\n  }\n\n  function unique(collection) {\n    return cash(slice.call(collection).filter(function (item, index, self) {\n      return self.indexOf(item) === index;\n    }));\n  }\n\n  cash.extend({\n    merge: function (first, second) {\n      var len = +second.length, i = first.length, j = 0;\n\n      for (; j < len; i++, j++) {\n        first[i] = second[j];\n      }\n\n      first.length = i;\n      return first;\n    },\n\n    each: each,\n    matches: matches,\n    unique: unique,\n    isArray: Array.isArray,\n    isNumeric: function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n  });\n\n  var uid = cash.uid = \"_cash\" + Date.now();\n\n  function getDataCache(node) {\n    return (node[uid] = node[uid] || {});\n  }\n\n  function setData(node, key, value) {\n    return (getDataCache(node)[key] = value);\n  }\n\n  function getData(node, key) {\n    var c = getDataCache(node);\n    if (c[key] === undefined) {\n      c[key] = node.dataset ? node.dataset[key] : cash(node).attr(\"data-\" + key);\n    }\n    return c[key];\n  }\n\n  function removeData(node, key) {\n    var c = getDataCache(node);\n    if (c) {\n      delete c[key];\n    } else if (node.dataset) {\n      delete node.dataset[key];\n    } else {\n      cash(node).removeAttr(\"data-\" + name);\n    }\n  }\n\n  fn.extend({\n    data: function (name, value) {\n      if (isString(name)) {\n        return (value === undefined ? getData(this[0], name) : this.each(function (v) {\n          return setData(v, name, value);\n        }));\n      }\n\n      for (var key in name) {\n        this.data(key, name[key]);\n      }\n\n      return this;\n    },\n\n    removeData: function (key) {\n      return this.each(function (v) {\n        return removeData(v, key);\n      });\n    }\n\n  });\n\n  var notWhiteMatch = /\\S+/g;\n\n  function getClasses(c) {\n    return isString(c) && c.match(notWhiteMatch);\n  }\n\n  function hasClass(v, c) {\n    return (v.classList ? v.classList.contains(c) : new RegExp(\"(^| )\" + c + \"( |$)\", \"gi\").test(v.className));\n  }\n\n  function addClass(v, c, spacedName) {\n    if (v.classList) {\n      v.classList.add(c);\n    } else if (spacedName.indexOf(\" \" + c + \" \")) {\n      v.className += \" \" + c;\n    }\n  }\n\n  function removeClass(v, c) {\n    if (v.classList) {\n      v.classList.remove(c);\n    } else {\n      v.className = v.className.replace(c, \"\");\n    }\n  }\n\n  fn.extend({\n    addClass: function (c) {\n      var classes = getClasses(c);\n\n      return (classes ? this.each(function (v) {\n        var spacedName = \" \" + v.className + \" \";\n        each(classes, function (c) {\n          addClass(v, c, spacedName);\n        });\n      }) : this);\n    },\n\n    attr: function (name, value) {\n      if (!name) {\n        return undefined;\n      }\n\n      if (isString(name)) {\n        if (value === undefined) {\n          return this[0] ? this[0].getAttribute ? this[0].getAttribute(name) : this[0][name] : undefined;\n        }\n\n        return this.each(function (v) {\n          if (v.setAttribute) {\n            v.setAttribute(name, value);\n          } else {\n            v[name] = value;\n          }\n        });\n      }\n\n      for (var key in name) {\n        this.attr(key, name[key]);\n      }\n\n      return this;\n    },\n\n    hasClass: function (c) {\n      var check = false, classes = getClasses(c);\n      if (classes && classes.length) {\n        this.each(function (v) {\n          check = hasClass(v, classes[0]);\n          return !check;\n        });\n      }\n      return check;\n    },\n\n    prop: function (name, value) {\n      if (isString(name)) {\n        return (value === undefined ? this[0][name] : this.each(function (v) {\n          v[name] = value;\n        }));\n      }\n\n      for (var key in name) {\n        this.prop(key, name[key]);\n      }\n\n      return this;\n    },\n\n    removeAttr: function (name) {\n      return this.each(function (v) {\n        if (v.removeAttribute) {\n          v.removeAttribute(name);\n        } else {\n          delete v[name];\n        }\n      });\n    },\n\n    removeClass: function (c) {\n      if (!arguments.length) {\n        return this.attr(\"class\", \"\");\n      }\n      var classes = getClasses(c);\n      return (classes ? this.each(function (v) {\n        each(classes, function (c) {\n          removeClass(v, c);\n        });\n      }) : this);\n    },\n\n    removeProp: function (name) {\n      return this.each(function (v) {\n        delete v[name];\n      });\n    },\n\n    toggleClass: function (c, state) {\n      if (state !== undefined) {\n        return this[state ? \"addClass\" : \"removeClass\"](c);\n      }\n      var classes = getClasses(c);\n      return (classes ? this.each(function (v) {\n        var spacedName = \" \" + v.className + \" \";\n        each(classes, function (c) {\n          if (hasClass(v, c)) {\n            removeClass(v, c);\n          } else {\n            addClass(v, c, spacedName);\n          }\n        });\n      }) : this);\n    } });\n\n  fn.extend({\n    add: function (selector, context) {\n      return unique(cash.merge(this, cash(selector, context)));\n    },\n\n    each: function (callback) {\n      each(this, callback);\n      return this;\n    },\n\n    eq: function (index) {\n      return cash(this.get(index));\n    },\n\n    filter: function (selector) {\n      if (!selector) {\n        return this;\n      }\n\n      var comparator = (isFunction(selector) ? selector : getCompareFunction(selector));\n\n      return cash(filter.call(this, function (e) {\n        return comparator(e, selector);\n      }));\n    },\n\n    first: function () {\n      return this.eq(0);\n    },\n\n    get: function (index) {\n      if (index === undefined) {\n        return slice.call(this);\n      }\n      return (index < 0 ? this[index + this.length] : this[index]);\n    },\n\n    index: function (elem) {\n      var child = elem ? cash(elem)[0] : this[0], collection = elem ? this : cash(child).parent().children();\n      return slice.call(collection).indexOf(child);\n    },\n\n    last: function () {\n      return this.eq(-1);\n    }\n\n  });\n\n  var camelCase = (function () {\n    var camelRegex = /(?:^\\w|[A-Z]|\\b\\w)/g, whiteSpace = /[\\s-_]+/g;\n    return function (str) {\n      return str.replace(camelRegex, function (letter, index) {\n        return letter[index === 0 ? \"toLowerCase\" : \"toUpperCase\"]();\n      }).replace(whiteSpace, \"\");\n    };\n  }());\n\n  var getPrefixedProp = (function () {\n    var cache = {}, doc = document, div = doc.createElement(\"div\"), style = div.style;\n\n    return function (prop) {\n      prop = camelCase(prop);\n      if (cache[prop]) {\n        return cache[prop];\n      }\n\n      var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1), prefixes = [\"webkit\", \"moz\", \"ms\", \"o\"], props = (prop + \" \" + (prefixes).join(ucProp + \" \") + ucProp).split(\" \");\n\n      each(props, function (p) {\n        if (p in style) {\n          cache[p] = prop = cache[prop] = p;\n          return false;\n        }\n      });\n\n      return cache[prop];\n    };\n  }());\n\n  cash.prefixedProp = getPrefixedProp;\n  cash.camelCase = camelCase;\n\n  fn.extend({\n    css: function (prop, value) {\n      if (isString(prop)) {\n        prop = getPrefixedProp(prop);\n        return (arguments.length > 1 ? this.each(function (v) {\n          return v.style[prop] = value;\n        }) : win.getComputedStyle(this[0])[prop]);\n      }\n\n      for (var key in prop) {\n        this.css(key, prop[key]);\n      }\n\n      return this;\n    }\n\n  });\n\n  function compute(el, prop) {\n    return parseInt(win.getComputedStyle(el[0], null)[prop], 10) || 0;\n  }\n\n  each([\"Width\", \"Height\"], function (v) {\n    var lower = v.toLowerCase();\n\n    fn[lower] = function () {\n      return this[0].getBoundingClientRect()[lower];\n    };\n\n    fn[\"inner\" + v] = function () {\n      return this[0][\"client\" + v];\n    };\n\n    fn[\"outer\" + v] = function (margins) {\n      return this[0][\"offset\" + v] + (margins ? compute(this, \"margin\" + (v === \"Width\" ? \"Left\" : \"Top\")) + compute(this, \"margin\" + (v === \"Width\" ? \"Right\" : \"Bottom\")) : 0);\n    };\n  });\n\n  function registerEvent(node, eventName, callback) {\n    var eventCache = getData(node, \"_cashEvents\") || setData(node, \"_cashEvents\", {});\n    eventCache[eventName] = eventCache[eventName] || [];\n    eventCache[eventName].push(callback);\n    node.addEventListener(eventName, callback);\n  }\n\n  function removeEvent(node, eventName, callback) {\n    var events = getData(node, \"_cashEvents\"), eventCache = (events && events[eventName]), index;\n\n    if (!eventCache) {\n      return;\n    }\n\n    if (callback) {\n      node.removeEventListener(eventName, callback);\n      index = eventCache.indexOf(callback);\n      if (index >= 0) {\n        eventCache.splice(index, 1);\n      }\n    } else {\n      each(eventCache, function (event) {\n        node.removeEventListener(eventName, event);\n      });\n      eventCache = [];\n    }\n  }\n\n  fn.extend({\n    off: function (eventName, callback) {\n      return this.each(function (v) {\n        return removeEvent(v, eventName, callback);\n      });\n    },\n\n    on: function (eventName, delegate, callback, runOnce) {\n      // jshint ignore:line\n\n      var originalCallback;\n\n      if (!isString(eventName)) {\n        for (var key in eventName) {\n          this.on(key, delegate, eventName[key]);\n        }\n        return this;\n      }\n\n      if (isFunction(delegate)) {\n        callback = delegate;\n        delegate = null;\n      }\n\n      if (eventName === \"ready\") {\n        onReady(callback);\n        return this;\n      }\n\n      if (delegate) {\n        originalCallback = callback;\n        callback = function (e) {\n          var t = e.target;\n\n          while (!matches(t, delegate)) {\n            if (t === this) {\n              return (t = false);\n            }\n            t = t.parentNode;\n          }\n\n          if (t) {\n            originalCallback.call(t, e);\n          }\n        };\n      }\n\n      return this.each(function (v) {\n        var finalCallback = callback;\n        if (runOnce) {\n          finalCallback = function () {\n            callback.apply(this, arguments);\n            removeEvent(v, eventName, finalCallback);\n          };\n        }\n        registerEvent(v, eventName, finalCallback);\n      });\n    },\n\n    one: function (eventName, delegate, callback) {\n      return this.on(eventName, delegate, callback, true);\n    },\n\n    ready: onReady,\n\n    trigger: function (eventName, data) {\n      var evt = doc.createEvent(\"HTMLEvents\");\n      evt.data = data;\n      evt.initEvent(eventName, true, false);\n      return this.each(function (v) {\n        return v.dispatchEvent(evt);\n      });\n    }\n\n  });\n\n  function encode(name, value) {\n    return \"&\" + encodeURIComponent(name) + \"=\" + encodeURIComponent(value).replace(/%20/g, \"+\");\n  }\n\n  function getSelectMultiple_(el) {\n    var values = [];\n    each(el.options, function (o) {\n      if (o.selected) {\n        values.push(o.value);\n      }\n    });\n    return values.length ? values : null;\n  }\n\n  function getSelectSingle_(el) {\n    var selectedIndex = el.selectedIndex;\n    return selectedIndex >= 0 ? el.options[selectedIndex].value : null;\n  }\n\n  function getValue(el) {\n    var type = el.type;\n    if (!type) {\n      return null;\n    }\n    switch (type.toLowerCase()) {\n      case \"select-one\":\n        return getSelectSingle_(el);\n      case \"select-multiple\":\n        return getSelectMultiple_(el);\n      case \"radio\":\n        return (el.checked) ? el.value : null;\n      case \"checkbox\":\n        return (el.checked) ? el.value : null;\n      default:\n        return el.value ? el.value : null;\n    }\n  }\n\n  fn.extend({\n    serialize: function () {\n      var query = \"\";\n\n      each(this[0].elements || this, function (el) {\n        if (el.disabled || el.tagName === \"FIELDSET\") {\n          return;\n        }\n        var name = el.name;\n        switch (el.type.toLowerCase()) {\n          case \"file\":\n          case \"reset\":\n          case \"submit\":\n          case \"button\":\n            break;\n          case \"select-multiple\":\n            var values = getValue(el);\n            if (values !== null) {\n              each(values, function (value) {\n                query += encode(name, value);\n              });\n            }\n            break;\n          default:\n            var value = getValue(el);\n            if (value !== null) {\n              query += encode(name, value);\n            }\n        }\n      });\n\n      return query.substr(1);\n    },\n\n    val: function (value) {\n      if (value === undefined) {\n        return getValue(this[0]);\n      } else {\n        return this.each(function (v) {\n          return v.value = value;\n        });\n      }\n    }\n\n  });\n\n  function insertElement(el, child, prepend) {\n    if (prepend) {\n      var first = el.childNodes[0];\n      el.insertBefore(child, first);\n    } else {\n      el.appendChild(child);\n    }\n  }\n\n  function insertContent(parent, child, prepend) {\n    var str = isString(child);\n\n    if (!str && child.length) {\n      each(child, function (v) {\n        return insertContent(parent, v, prepend);\n      });\n      return;\n    }\n\n    each(parent, str ? function (v) {\n      return v.insertAdjacentHTML(prepend ? \"afterbegin\" : \"beforeend\", child);\n    } : function (v, i) {\n      return insertElement(v, (i === 0 ? child : child.cloneNode(true)), prepend);\n    });\n  }\n\n  fn.extend({\n    after: function (selector) {\n      cash(selector).insertAfter(this);\n      return this;\n    },\n\n    append: function (content) {\n      insertContent(this, content);\n      return this;\n    },\n\n    appendTo: function (parent) {\n      insertContent(cash(parent), this);\n      return this;\n    },\n\n    before: function (selector) {\n      cash(selector).insertBefore(this);\n      return this;\n    },\n\n    clone: function () {\n      return cash(this.map(function (v) {\n        return v.cloneNode(true);\n      }));\n    },\n\n    empty: function () {\n      this.html(\"\");\n      return this;\n    },\n\n    html: function (content) {\n      if (content === undefined) {\n        return this[0].innerHTML;\n      }\n      var source = (content.nodeType ? content[0].outerHTML : content);\n      return this.each(function (v) {\n        return v.innerHTML = source;\n      });\n    },\n\n    insertAfter: function (selector) {\n      var _this = this;\n\n\n      cash(selector).each(function (el, i) {\n        var parent = el.parentNode, sibling = el.nextSibling;\n        _this.each(function (v) {\n          parent.insertBefore((i === 0 ? v : v.cloneNode(true)), sibling);\n        });\n      });\n\n      return this;\n    },\n\n    insertBefore: function (selector) {\n      var _this2 = this;\n      cash(selector).each(function (el, i) {\n        var parent = el.parentNode;\n        _this2.each(function (v) {\n          parent.insertBefore((i === 0 ? v : v.cloneNode(true)), el);\n        });\n      });\n      return this;\n    },\n\n    prepend: function (content) {\n      insertContent(this, content, true);\n      return this;\n    },\n\n    prependTo: function (parent) {\n      insertContent(cash(parent), this, true);\n      return this;\n    },\n\n    remove: function () {\n      return this.each(function (v) {\n        return v.parentNode.removeChild(v);\n      });\n    },\n\n    text: function (content) {\n      if (content === undefined) {\n        return this[0].textContent;\n      }\n      return this.each(function (v) {\n        return v.textContent = content;\n      });\n    }\n\n  });\n\n  var docEl = doc.documentElement;\n\n  fn.extend({\n    position: function () {\n      var el = this[0];\n      return {\n        left: el.offsetLeft,\n        top: el.offsetTop\n      };\n    },\n\n    offset: function () {\n      var rect = this[0].getBoundingClientRect();\n      return {\n        top: rect.top + win.pageYOffset - docEl.clientTop,\n        left: rect.left + win.pageXOffset - docEl.clientLeft\n      };\n    },\n\n    offsetParent: function () {\n      return cash(this[0].offsetParent);\n    }\n\n  });\n\n  fn.extend({\n    children: function (selector) {\n      var elems = [];\n      this.each(function (el) {\n        push.apply(elems, el.children);\n      });\n      elems = unique(elems);\n\n      return (!selector ? elems : elems.filter(function (v) {\n        return matches(v, selector);\n      }));\n    },\n\n    closest: function (selector) {\n      if (!selector || this.length < 1) {\n        return cash();\n      }\n      if (this.is(selector)) {\n        return this.filter(selector);\n      }\n      return this.parent().closest(selector);\n    },\n\n    is: function (selector) {\n      if (!selector) {\n        return false;\n      }\n\n      var match = false, comparator = getCompareFunction(selector);\n\n      this.each(function (el) {\n        match = comparator(el, selector);\n        return !match;\n      });\n\n      return match;\n    },\n\n    find: function (selector) {\n      if (!selector || selector.nodeType) {\n        return cash(selector && this.has(selector).length ? selector : null);\n      }\n\n      var elems = [];\n      this.each(function (el) {\n        push.apply(elems, find(selector, el));\n      });\n\n      return unique(elems);\n    },\n\n    has: function (selector) {\n      var comparator = (isString(selector) ? function (el) {\n        return find(selector, el).length !== 0;\n      } : function (el) {\n        return el.contains(selector);\n      });\n\n      return this.filter(comparator);\n    },\n\n    next: function () {\n      return cash(this[0].nextElementSibling);\n    },\n\n    not: function (selector) {\n      if (!selector) {\n        return this;\n      }\n\n      var comparator = getCompareFunction(selector);\n\n      return this.filter(function (el) {\n        return !comparator(el, selector);\n      });\n    },\n\n    parent: function () {\n      var result = [];\n\n      this.each(function (item) {\n        if (item && item.parentNode) {\n          result.push(item.parentNode);\n        }\n      });\n\n      return unique(result);\n    },\n\n    parents: function (selector) {\n      var last, result = [];\n\n      this.each(function (item) {\n        last = item;\n\n        while (last && last.parentNode && last !== doc.body.parentNode) {\n          last = last.parentNode;\n\n          if (!selector || (selector && matches(last, selector))) {\n            result.push(last);\n          }\n        }\n      });\n\n      return unique(result);\n    },\n\n    prev: function () {\n      return cash(this[0].previousElementSibling);\n    },\n\n    siblings: function () {\n      var collection = this.parent().children(), el = this[0];\n\n      return collection.filter(function (i) {\n        return i !== el;\n      });\n    }\n\n  });\n\n\n  return cash;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cash-dom/dist/cash.js\n// module id = 0\n// module chunks = 0","// import 'jquery-3.2.1.slim.min.js';\n// import 'flyin.js';\n// import 'tooltip.js';\n\nimport './flyin.js';\nimport './slider.js';\nimport './overflow.js';\nimport './toggle.js';\nimport './fadeSiblings.js';\nimport 'tooltip.js';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 1\n// module chunks = 0","import $ from 'cash-dom';\n// import $ from 'jquery-slim';\n\nvar siteWrapper = document.getElementById(\"siteWrapper\"),\n    allowScrolling = true;\n\n/**\n * open and close mobile nav\n */\n$(\".jsFlyinBtn\").on( \"click\", toggleFlyin );\n\nfunction toggleFlyin( event ) {\n    var target = $(this).attr('data-target');\n    if( $(this).attr('data-action') == 'open' ) {\n        $('#'+target).addClass('c-flyin--open');\n        $(siteWrapper).addClass('c-site-wrapper--faded');\n        allowScrolling = false;\n    } else {\n        $('#'+target).removeClass('c-flyin--open');\n        $(siteWrapper).removeClass('c-site-wrapper--faded');\n        allowScrolling = true;\n    }\n}\n\n/**\n * Enable/Disable scrolling on #siteWrapper when mobile nav is open\n * on iPhone/iPad’s Safari\n */\nif( siteWrapper ) {\n    siteWrapper.ontouchmove = function (e) {\n        if(allowScrolling) {\n            return true; // Enable scrolling.\n        } else {\n            e.preventDefault(); // Disable scrolling.\n        }\n    }\n}\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/flyin.js\n// module id = 2\n// module chunks = 0","/*\n * Joel Media Slider\n * @author: Lukas Hermann\n */\n\nimport $ from 'cash-dom';\n// import $ from 'jquery-slim';\n\n/* Keep in sync with _components.slider.scss */\nvar sliders = [\n    {\n        slideDuration:   3000,\n        slideTransition: 800,\n        slideDelay:      200,\n        automatic:       \"initial\",\n        node:            $(\"#mainSlider\"),\n        object:          false\n    },\n    {\n        slideDuration:   8000,\n        slideTransition: 800,\n        slideDelay:      200,\n        automatic:       \"always\",\n        node:            $(\"#quoteSlider\"),\n        object:          false\n    }\n]\n\nvar slideDuration   = 3000;\nvar slideTransition = 800;\nvar slideDelay      = 200;\n\nvar mainSlider = $(\"#mainSlider\");\nvar quoteSlider = $(\"#quoteSlider\");\n\nfunction mod(n, m) {\n    return ((n % m) + m) % m;\n}\n\n// holder class for each slide\nfunction Slide(id, slide, nav, slideTransition) {\n\n    this.id = id;\n    this.slide = slide;\n    this.nav = nav;\n    this.class = \"\";\n    this.zIndex = false;\n    this.slideTransition = typeof slideTransition === 'number' ? slideTransition : 800;\n\n    this.setZIndex = function(z) {\n        $(this.slide).css( \"z-index\", z );\n        this.zIndex = z;\n    };\n\n    this.activateNav = function() {\n        $(this.nav).addClass('is-active');\n    };\n\n    this.deactivateNav = function() {\n        $(this.nav).removeClass('is-active');\n    };\n\n    this.animateEnter = function() {\n        this.add('is-entering');\n        setTimeout(function(obj) {\n            obj.rm('is-entering');\n        }, slideTransition, this);\n    };\n\n    this.animateLeave = function() {\n        this.add('is-leaving');\n        setTimeout(function(obj) {\n            obj.rm('is-leaving');\n        }, slideTransition, this);\n    };\n\n    this.add = function(cssClass) {\n        $(this.slide).addClass(cssClass);\n    };\n\n    this.rm = function(cssClass) {\n        $(this.slide).removeClass(cssClass);\n    };\n}\n\n// slider with its methods\nfunction Slider(slider, slideDelay, slideTransition) {\n\n    var sliderList = $(slider).find('.jsSliderList').children();\n    var sliderNav = $(slider).find('.jsSliderNav').children();\n\n    // populate slides array\n    var slides = [];\n    $(sliderList).each(function( value, index ) {\n        slides.push( new Slide(\n            index+1,\n            this,\n            $(sliderNav[index]).get(0),\n            slideTransition\n        ));\n    })\n\n    // bring slide array into initial order\n    slides\n        .reverse()\n        .unshift(slides.pop());\n\n    // Slide Stack\n    this.slideStack = slides;\n    this.slideCount = slides.length;\n    this.currentSlide = 1;\n\n    // slider\n    this.slider = slider;\n    this.numChanged = 0;\n    this.isAutomatic = true;\n    this.intervalId = 0;\n\n    // timing\n    this.slideDelay = typeof slideDelay === 'number' ? slideDelay : 200;\n\n    // setup dom\n\n    this.setZIndices = function() {\n        var slideCount = this.slideCount;\n        this.slideStack.forEach( function(slide, index) {\n            slide.setZIndex( slideCount - index );\n        });\n    }\n    this.setZIndices();\n\n    this.setActiveNav = function() {\n        this.slideStack.forEach( function(slide, index) {\n            if( index == 0 ) {\n                slide.activateNav();\n            } else {\n                slide.deactivateNav();\n            }\n        });\n    }\n    this.setActiveNav();\n\n    this.transitionSlide = function(direction) {\n        this.setZIndices();\n        this.setActiveNav();\n\n        if(direction == 'backwards') {\n            (this.slideStack[ this.slideStack.length - 1 ]).animateLeave();\n        } else {\n            (this.slideStack[0]).animateEnter();\n        }\n    }\n\n    /*\n     * Interval Function handles one single slide transition\n     */\n    this.intervalFunction = function(obj, id) {\n        console.log(\"currentSlide \" + obj.currentSlide);\n        if( obj.currentSlide == id ) {\n            clearInterval(obj.intervalId);\n            return true;\n        }\n\n        if( id > obj.currentSlide ) {\n            obj.slideStack.unshift( obj.slideStack.pop() );\n            obj.transitionSlide('forwards');\n        } else {\n            obj.slideStack.push( obj.slideStack.shift() );\n            obj.transitionSlide('backwards');\n        }\n\n        console.log(obj.slideStack);\n        obj.currentSlide = obj.slideStack[0].id;\n\n        if( obj.currentSlide == id ) {\n            clearInterval(obj.intervalId);\n            return true;\n        }\n        return false;\n    }\n\n    /*\n     * Change to slide with id\n     */\n    this.slide = function(id) {\n        console.log(\"target id \" + id);\n\n        this.intervalFunction(this, id);\n        this.intervalId = setInterval( this.intervalFunction, this.slideDelay, this, id);\n\n        if( this.numChanged++ >= this.slideCount - 1 ) {\n            this.deactivateAutomatic();\n        }\n    }\n\n    /*\n     * Change to next slide\n     */\n    this.nextSlide = function() {\n        if( this.currentSlide == this.slideCount ) {\n            this.slide( 1 )\n        } else {\n            this.slide( this.currentSlide + 1 )\n        }\n    }\n\n    /*\n     * Change to previous slide\n     */\n    this.previousSlide = function() {\n        if( this.currentSlide == 1 ) {\n            this.slide( this.slideCount )\n        } else {\n            this.slide( this.currentSlide - 1 )\n        }\n    }\n\n    /*\n     * Deactivate automatic changing of slides\n     */\n    this.deactivateAutomatic = function() {\n        if( this.isAutomatic == true ) {\n            $(this.slider).removeClass('is-automatic');\n            this.isAutomatic = false;\n        }\n    }\n\n}\n\n\n\n\n$(document).ready( function() {\n\n    $(\".jsSliderNav a\").on(\"click\", function( event ) {\n        event.preventDefault();\n    });\n\n    /*\n     * A little timeout is necessary otherwise the animation classes will be\n     * added before css is done parsing, thus not showing transition effects\n     */\n    setTimeout(function() {\n\n        sliders.forEach(function(slider) {\n\n            if( $(slider.node).length ) {\n\n                slider.object = new Slider( slider.node, slider.slideDelay, slider.slideTransition );\n\n                // attach event handler to buttons\n                $(\".jsSliderBtn\").on( \"click\", function(event){\n                    slider.object.deactivateAutomatic();\n                    if( $(this).attr('data') == 'next' ) {\n                        slider.object.nextSlide();\n                    } else {\n                        slider.object.previousSlide();\n                    }\n                });\n\n                // attach event handler to slider navigation\n                $(\".jsSliderNav li\").on( \"click\", function(event){\n                    event.preventDefault();\n                    slider.object.deactivateAutomatic();\n                    slider.object.slide( $(this).attr('data') );\n                })\n\n                switch(slider.automatic) {\n                    case \"initial\":\n                        setInterval( function(){\n                            if( slider.object.isAutomatic ) {\n                                slider.object.nextSlide();\n                            }\n                        }, slider.slideDuration );\n                        break;\n\n                    case \"always\":\n                        setInterval( function(){\n                            slider.object.nextSlide();\n                        }, slider.slideDuration );\n                        break;\n                }\n\n            }\n\n        });\n\n    }, 300);\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/slider.js\n// module id = 3\n// module chunks = 0","/**\n * Overflow controlls horizontal content that is cut off because of the width of\n * the screen and provides controlls for it\n */\n\nimport $ from 'cash-dom';\n// import $ from 'jquery-slim';\n\n\n/*\n * Initiate variables\n * 1. Width of one of the nav buttons\n */\nvar overflowNavWidth = 42, /* 1 */\n    overflowArray = [];\n\n/*\n * Class for .o-overflow objects\n */\nfunction Overflow(container) {\n    this.container     = container;\n    this.content       = $(container).find(\".o-overflow__content\").get(0);\n    this.count         = $(this.content).children().length;\n    this.childrenWidth = parseInt($(this.content).children().first().width());\n    this.spaceBetween  = parseInt($(this.content).data(\"space-between\"));\n    this.innerWidth    = parseInt(this.count * this.childrenWidth + this.spaceBetween);\n    this.outerWidth    = parseInt($(this.container).width());\n    this.currentPos    = 0;\n    this.state         = \"is-left\";\n    // console.log( \"this.childrenWidth \" + this.childrenWidth );\n    // console.log( \"this.spaceBetween \" + this.spaceBetween );\n    // console.log( \"this.innerWidth \" + this.innerWidth );\n    // console.log( \"this.outerWidth \" + this.outerWidth );\n\n    this.getShiftWidth = function(direction) {\n        var shiftCount = Math.round( (this.outerWidth - overflowNavWidth) / this.childrenWidth ),\n            shiftWidth = this.childrenWidth * shiftCount;\n\n        switch (direction) {\n          case \"left\":\n            if( this.currentPos - shiftWidth >= 0 ) {\n                return shiftWidth;\n            } else {\n                return this.currentPos;\n            }\n            break;\n          case \"right\":\n          default:\n            if( this.currentPos + shiftWidth + this.outerWidth <= this.innerWidth ) {\n                return shiftWidth;\n            } else {\n                return this.innerWidth - this.outerWidth - this.currentPos;\n            }\n            break;\n        }\n    };\n\n    this.shiftRight = function() {\n        var shift = this.getShiftWidth(\"right\");\n        this.currentPos += shift\n        this.setContentX( this.currentPos );\n        this.updateContainerState();\n    };\n\n    this.shiftLeft = function() {\n        var shift = this.getShiftWidth(\"left\");\n        this.currentPos -= shift;\n        this.setContentX( this.currentPos );\n        this.updateContainerState();\n    }\n\n    this.setContentX = function(x) {\n        $(this.content).css( \"transform\", \"translateX(-\" + x + \"px)\" );\n    };\n\n    /*\n     * Add a little bit of wiggle room\n     */\n    this.updateContainerState = function() {\n        $(this.container).removeClass( this.state );\n        if( this.currentPos <= 1 ) { /* 1 */\n            $(this.container).addClass( \"is-left\" );\n            this.state = \"is-left\";\n        } else if( this.currentPos >= this.innerWidth - this.outerWidth ) {\n            $(this.container).addClass( \"is-right\" );\n            this.state = \"is-right\";\n        } else {\n            $(this.container).addClass( \"is-middle\" );\n            this.state = \"is-middle\";\n        }\n    };\n\n    this.updateContainerWidth = function() {\n        if( this.currentPos > this.innerWidth - this.outerWidth ) {\n            this.currentPos = this.innerWidth - this.outerWidth;\n            this.setContentX( this.currentPos );\n        }\n        this.updateContainerState();\n    };\n\n    this.updateContainerWidth();\n}\n\n/*\n * Initiate objects for overflow elements\n */\n$(\".o-overflow\").each( function(element, i) {\n\n    overflowArray.push( new Overflow(element) );\n\n    $(overflowArray[i].container).find(\".jsNavLeft\").on( \"click\", function(event){\n        overflowArray[i].shiftLeft();\n    });\n\n    $(overflowArray[i].container).find(\".jsNavRight\").on( \"click\", function(event){\n        overflowArray[i].shiftRight();\n    });\n\n});\n\n/*\n * Adapt responsively to viewport changes\n */\n$( window ).on(\"resize\", function() {\n    overflowArray.forEach( function(overflow) {\n        overflow.updateContainerWidth();\n    })\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/overflow.js\n// module id = 4\n// module chunks = 0","/**\n * Have a button toggle a class on a target\n *\n * data-target - the target selector \".o-example\". Target must be\n *               sibling of button.\n * data-class  - the class that is being toggled on the target\n *\n * Toggles the \"is-hidden\" class on its own children if it exists, eg:\n * <button class=\"jsToggle\">\n *   <span>more</span>\n *   <span class=\"u-hidden\">less</span>\n * </button>\n */\n\nimport $ from 'cash-dom';\n// import $ from 'jquery-slim';\n\n$(\".jsToggle\").on(\"click\", function(e){\n    var target = $(this).attr(\"data-target\"),\n        css = $(this).attr(\"data-class\"),\n        children = $(this).children();\n    $(this).siblings(target).toggleClass(css);\n    if( $(children).hasClass(\"u-hidden\") ) {\n        $(children).toggleClass(\"u-hidden\");\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/toggle.js\n// module id = 5\n// module chunks = 0","/**\n * Add class .is-faded to all Siblings during hover\n *\n */\n\nimport $ from 'cash-dom';\n// import $ from 'jquery-slim';\n\n$(\".jsFadeSiblings\").on(\"mouseenter\", function(e){\n    $(this).siblings().addClass(\"is-faded\");\n}).on(\"mouseleave\", function(e){\n    $(this).siblings().removeClass(\"is-faded\");\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/fadeSiblings.js\n// module id = 6\n// module chunks = 0","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.1.5\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nimport Popper from 'popper.js';\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar DEFAULT_OPTIONS = {\n  container: false,\n  delay: 0,\n  html: false,\n  placement: 'top',\n  title: '',\n  template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n  trigger: 'hover focus',\n  offset: 0\n};\n\nvar Tooltip = function () {\n  /**\n   * Create a new Tooltip.js instance\n   * @class Tooltip\n   * @param {HTMLElement} reference - The DOM node used as reference of the tooltip (it can be a jQuery element).\n   * @param {Object} options\n   * @param {String} options.placement=bottom\n   *      Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -end),\n   *      left(-start, -end)`\n   * @param {HTMLElement|String|false} options.container=false - Append the tooltip to a specific element.\n   * @param {Number|Object} options.delay=0\n   *      Delay showing and hiding the tooltip (ms) - does not apply to manual trigger type.\n   *      If a number is supplied, delay is applied to both hide/show.\n   *      Object structure is: `{ show: 500, hide: 100 }`\n   * @param {Boolean} options.html=false - Insert HTML into the tooltip. If false, the content will inserted with `innerText`.\n   * @param {String|PlacementFunction} options.placement='top' - One of the allowed placements, or a function returning one of them.\n   * @param {String} [options.template='<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>']\n   *      Base HTML to used when creating the tooltip.\n   *      The tooltip's `title` will be injected into the `.tooltip-inner` or `.tooltip__inner`.\n   *      `.tooltip-arrow` or `.tooltip__arrow` will become the tooltip's arrow.\n   *      The outermost wrapper element should have the `.tooltip` class.\n   * @param {String|HTMLElement|TitleFunction} options.title='' - Default title value if `title` attribute isn't present.\n   * @param {String} [options.trigger='hover focus']\n   *      How tooltip is triggered - click, hover, focus, manual.\n   *      You may pass multiple triggers; separate them with a space. `manual` cannot be combined with any other trigger.\n   * @param {HTMLElement} options.boundariesElement\n   *      The element used as boundaries for the tooltip. For more information refer to Popper.js'\n   *      [boundariesElement docs](https://popper.js.org/popper-documentation.html)\n   * @param {Number|String} options.offset=0 - Offset of the tooltip relative to its reference. For more information refer to Popper.js'\n   *      [offset docs](https://popper.js.org/popper-documentation.html)\n   * @param {Object} options.popperOptions={} - Popper options, will be passed directly to popper instance. For more information refer to Popper.js'\n   *      [options docs](https://popper.js.org/popper-documentation.html)\n   * @return {Object} instance - The generated tooltip instance\n   */\n  function Tooltip(reference, options) {\n    classCallCheck(this, Tooltip);\n\n    _initialiseProps.call(this);\n\n    // apply user options over default ones\n    options = _extends({}, DEFAULT_OPTIONS, options);\n\n    reference.jquery && (reference = reference[0]);\n\n    // cache reference and options\n    this.reference = reference;\n    this.options = options;\n\n    // get events list\n    var events = typeof options.trigger === 'string' ? options.trigger.split(' ').filter(function (trigger) {\n      return ['click', 'hover', 'focus'].indexOf(trigger) !== -1;\n    }) : [];\n\n    // set initial state\n    this._isOpen = false;\n\n    // set event listeners\n    this._setEventListeners(reference, events, options);\n  }\n\n  //\n  // Public methods\n  //\n\n  /**\n   * Reveals an element's tooltip. This is considered a \"manual\" triggering of the tooltip.\n   * Tooltips with zero-length titles are never displayed.\n   * @method Tooltip#show\n   * @memberof Tooltip\n   */\n\n\n  /**\n   * Hides an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n   * @method Tooltip#hide\n   * @memberof Tooltip\n   */\n\n\n  /**\n   * Hides and destroys an element’s tooltip.\n   * @method Tooltip#dispose\n   * @memberof Tooltip\n   */\n\n\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of the tooltip.\n   * @method Tooltip#toggle\n   * @memberof Tooltip\n   */\n\n\n  //\n  // Defaults\n  //\n\n\n  //\n  // Private methods\n  //\n\n  createClass(Tooltip, [{\n    key: '_create',\n\n\n    /**\n     * Creates a new tooltip node\n     * @memberof Tooltip\n     * @private\n     * @param {HTMLElement} reference\n     * @param {String} template\n     * @param {String|HTMLElement|TitleFunction} title\n     * @param {Boolean} allowHtml\n     * @return {HTMLelement} tooltipNode\n     */\n    value: function _create(reference, template, title, allowHtml) {\n      // create tooltip element\n      var tooltipGenerator = window.document.createElement('div');\n      tooltipGenerator.innerHTML = template.trim();\n      var tooltipNode = tooltipGenerator.childNodes[0];\n\n      // add unique ID to our tooltip (needed for accessibility reasons)\n      tooltipNode.id = 'tooltip_' + Math.random().toString(36).substr(2, 10);\n\n      // set initial `aria-hidden` state to `false` (it's visible!)\n      tooltipNode.setAttribute('aria-hidden', 'false');\n\n      // add title to tooltip\n      var titleNode = tooltipGenerator.querySelector(this.innerSelector);\n      if (title.nodeType === 1) {\n        // if title is a node, append it only if allowHtml is true\n        allowHtml && titleNode.appendChild(title);\n      } else if (isFunction(title)) {\n        // if title is a function, call it and set innerText or innerHtml depending by `allowHtml` value\n        var titleText = title.call(reference);\n        allowHtml ? titleNode.innerHTML = titleText : titleNode.innerText = titleText;\n      } else {\n        // if it's just a simple text, set innerText or innerHtml depending by `allowHtml` value\n        allowHtml ? titleNode.innerHTML = title : titleNode.innerText = title;\n      }\n\n      // return the generated tooltip node\n      return tooltipNode;\n    }\n  }, {\n    key: '_show',\n    value: function _show(reference, options) {\n      // don't show if it's already visible\n      if (this._isOpen) {\n        return this;\n      }\n      this._isOpen = true;\n\n      // if the tooltipNode already exists, just show it\n      if (this._tooltipNode) {\n        this._tooltipNode.style.display = '';\n        this._tooltipNode.setAttribute('aria-hidden', 'false');\n        this.popperInstance.update();\n        return this;\n      }\n\n      // get title\n      var title = reference.getAttribute('title') || options.title;\n\n      // don't show tooltip if no title is defined\n      if (!title) {\n        return this;\n      }\n\n      // create tooltip node\n      var tooltipNode = this._create(reference, options.template, title, options.html);\n\n      // Add `aria-describedby` to our reference element for accessibility reasons\n      reference.setAttribute('aria-describedby', tooltipNode.id);\n\n      // append tooltip to container\n      var container = this._findContainer(options.container, reference);\n\n      this._append(tooltipNode, container);\n\n      var popperOptions = _extends({}, options.popperOptions, {\n        placement: options.placement\n      });\n\n      popperOptions.modifiers = _extends({}, popperOptions.modifiers, {\n        arrow: {\n          element: this.arrowSelector\n        }\n      });\n\n      if (options.boundariesElement) {\n        popperOptions.modifiers.preventOverflow = {\n          boundariesElement: options.boundariesElement\n        };\n      }\n\n      this.popperInstance = new Popper(reference, tooltipNode, popperOptions);\n\n      this._tooltipNode = tooltipNode;\n\n      return this;\n    }\n  }, {\n    key: '_hide',\n    value: function _hide() /*reference, options*/{\n      // don't hide if it's already hidden\n      if (!this._isOpen) {\n        return this;\n      }\n\n      this._isOpen = false;\n\n      // hide tooltipNode\n      this._tooltipNode.style.display = 'none';\n      this._tooltipNode.setAttribute('aria-hidden', 'true');\n\n      return this;\n    }\n  }, {\n    key: '_dispose',\n    value: function _dispose() {\n      var _this = this;\n\n      if (this._tooltipNode) {\n        this._hide();\n\n        // destroy instance\n        this.popperInstance.destroy();\n\n        // remove event listeners\n        this._events.forEach(function (_ref) {\n          var func = _ref.func,\n              event = _ref.event;\n\n          _this.reference.removeEventListener(event, func);\n        });\n        this._events = [];\n\n        // destroy tooltipNode\n        this._tooltipNode.parentNode.removeChild(this._tooltipNode);\n        this._tooltipNode = null;\n      }\n      return this;\n    }\n  }, {\n    key: '_findContainer',\n    value: function _findContainer(container, reference) {\n      // if container is a query, get the relative element\n      if (typeof container === 'string') {\n        container = window.document.querySelector(container);\n      } else if (container === false) {\n        // if container is `false`, set it to reference parent\n        container = reference.parentNode;\n      }\n      return container;\n    }\n\n    /**\n     * Append tooltip to container\n     * @memberof Tooltip\n     * @private\n     * @param {HTMLElement} tooltip\n     * @param {HTMLElement|String|false} container\n     */\n\n  }, {\n    key: '_append',\n    value: function _append(tooltipNode, container) {\n      container.appendChild(tooltipNode);\n    }\n  }, {\n    key: '_setEventListeners',\n    value: function _setEventListeners(reference, events, options) {\n      var _this2 = this;\n\n      var directEvents = [];\n      var oppositeEvents = [];\n\n      events.forEach(function (event) {\n        switch (event) {\n          case 'hover':\n            directEvents.push('mouseenter');\n            oppositeEvents.push('mouseleave');\n            break;\n          case 'focus':\n            directEvents.push('focus');\n            oppositeEvents.push('blur');\n            break;\n          case 'click':\n            directEvents.push('click');\n            oppositeEvents.push('click');\n            break;\n        }\n      });\n\n      // schedule show tooltip\n      directEvents.forEach(function (event) {\n        var func = function func(evt) {\n          if (_this2._isOpen === true) {\n            return;\n          }\n          evt.usedByTooltip = true;\n          _this2._scheduleShow(reference, options.delay, options, evt);\n        };\n        _this2._events.push({ event: event, func: func });\n        reference.addEventListener(event, func);\n      });\n\n      // schedule hide tooltip\n      oppositeEvents.forEach(function (event) {\n        var func = function func(evt) {\n          if (evt.usedByTooltip === true) {\n            return;\n          }\n          _this2._scheduleHide(reference, options.delay, options, evt);\n        };\n        _this2._events.push({ event: event, func: func });\n        reference.addEventListener(event, func);\n      });\n    }\n  }, {\n    key: '_scheduleShow',\n    value: function _scheduleShow(reference, delay, options /*, evt */) {\n      var _this3 = this;\n\n      // defaults to 0\n      var computedDelay = delay && delay.show || delay || 0;\n      window.setTimeout(function () {\n        return _this3._show(reference, options);\n      }, computedDelay);\n    }\n  }, {\n    key: '_scheduleHide',\n    value: function _scheduleHide(reference, delay, options, evt) {\n      var _this4 = this;\n\n      // defaults to 0\n      var computedDelay = delay && delay.hide || delay || 0;\n      window.setTimeout(function () {\n        if (_this4._isOpen === false) {\n          return;\n        }\n        if (!document.body.contains(_this4._tooltipNode)) {\n          return;\n        }\n\n        // if we are hiding because of a mouseleave, we must check that the new\n        // reference isn't the tooltip, because in this case we don't want to hide it\n        if (evt.type === 'mouseleave') {\n          var isSet = _this4._setTooltipNodeEvent(evt, reference, delay, options);\n\n          // if we set the new event, don't hide the tooltip yet\n          // the new event will take care to hide it if necessary\n          if (isSet) {\n            return;\n          }\n        }\n\n        _this4._hide(reference, options);\n      }, computedDelay);\n    }\n  }]);\n  return Tooltip;\n}();\n\n/**\n * Placement function, its context is the Tooltip instance.\n * @memberof Tooltip\n * @callback PlacementFunction\n * @param {HTMLElement} tooltip - tooltip DOM node.\n * @param {HTMLElement} reference - reference DOM node.\n * @return {String} placement - One of the allowed placement options.\n */\n\n/**\n * Title function, its context is the Tooltip instance.\n * @memberof Tooltip\n * @callback TitleFunction\n * @return {String} placement - The desired title.\n */\n\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this5 = this;\n\n  this.show = function () {\n    return _this5._show(_this5.reference, _this5.options);\n  };\n\n  this.hide = function () {\n    return _this5._hide();\n  };\n\n  this.dispose = function () {\n    return _this5._dispose();\n  };\n\n  this.toggle = function () {\n    if (_this5._isOpen) {\n      return _this5.hide();\n    } else {\n      return _this5.show();\n    }\n  };\n\n  this.arrowSelector = '.tooltip-arrow, .tooltip__arrow';\n  this.innerSelector = '.tooltip-inner, .tooltip__inner';\n  this._events = [];\n\n  this._setTooltipNodeEvent = function (evt, reference, delay, options) {\n    var relatedreference = evt.relatedreference || evt.toElement;\n\n    var callback = function callback(evt2) {\n      var relatedreference2 = evt2.relatedreference || evt2.toElement;\n\n      // Remove event listener after call\n      _this5._tooltipNode.removeEventListener(evt.type, callback);\n\n      // If the new reference is not the reference element\n      if (!reference.contains(relatedreference2)) {\n        // Schedule to hide tooltip\n        _this5._scheduleHide(reference, options.delay, options, evt2);\n      }\n    };\n\n    if (_this5._tooltipNode.contains(relatedreference)) {\n      // listen to mouseleave on the tooltip element to be able to hide the tooltip\n      _this5._tooltipNode.addEventListener(evt.type, callback);\n      return true;\n    }\n\n    return false;\n  };\n};\n\nexport default Tooltip;\n//# sourceMappingURL=tooltip.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tooltip.js/dist/esm/tooltip.js\n// module id = 7\n// module chunks = 0","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.12.3\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar nativeHints = ['native code', '[object MutationObserverConstructor]'];\n\n/**\n * Determine if a function is implemented natively (as opposed to a polyfill).\n * @method\n * @memberof Popper.Utils\n * @argument {Function | undefined} fn the function to check\n * @returns {Boolean}\n */\nvar isNative = (function (fn) {\n  return nativeHints.some(function (hint) {\n    return (fn || '').toString().indexOf(hint) > -1;\n  });\n});\n\nvar isBrowser = typeof window !== 'undefined';\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var scheduled = false;\n  var i = 0;\n  var elem = document.createElement('span');\n\n  // MutationObserver provides a mechanism for scheduling microtasks, which\n  // are scheduled *before* the next task. This gives us a way to debounce\n  // a function but ensure it's called *before* the next paint.\n  var observer = new MutationObserver(function () {\n    fn();\n    scheduled = false;\n  });\n\n  observer.observe(elem, { attributes: true });\n\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      elem.setAttribute('x-index', i);\n      i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8\n    }\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\n// It's common for MutationObserver polyfills to be seen in the wild, however\n// these rely on Mutation Events which only occur when an element is connected\n// to the DOM. The algorithm used in this module does not use a connected element,\n// and so we must ensure that a *native* MutationObserver is available.\nvar supportsNativeMutationObserver = isBrowser && isNative(window.MutationObserver);\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsNativeMutationObserver ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1) {\n    return window.document.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  var offsetParent = element && element.offsetParent;\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return window.document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return window.document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = window.document.documentElement;\n    var scrollingElement = window.document.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return +styles['border' + sideA + 'Width'].split('px')[0] + +styles['border' + sideB + 'Width'].split('px')[0];\n}\n\n/**\n * Tells if you are running Internet Explorer 10\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean} isIE10\n */\nvar isIE10 = undefined;\n\nvar isIE10$1 = function () {\n  if (isIE10 === undefined) {\n    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  }\n  return isIE10;\n};\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE10$1() ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n}\n\nfunction getWindowSizes() {\n  var body = window.document.body;\n  var html = window.document.documentElement;\n  var computedStyle = isIE10$1() && window.getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10$1()) {\n    try {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } catch (err) {}\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var isIE10 = isIE10$1();\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = +styles.borderTopWidth.split('px')[0];\n  var borderLeftWidth = +styles.borderLeftWidth.split('px')[0];\n\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = +styles.marginTop.split('px')[0];\n    var marginLeft = +styles.marginLeft.split('px')[0];\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var html = window.document.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = getScroll(html);\n  var scrollLeft = getScroll(html, 'left');\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  // NOTE: 1 DOM access here\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(popper));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = window.document.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = window.document.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier.function) {\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier.function || modifier.fn;\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n  data.offsets.popper.position = 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length - 1; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof window.document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.left = '';\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? window : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  window.addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  window.removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    window.cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // floor sides to avoid blurry text\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.floor(popper.top),\n    bottom: Math.floor(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var popperMarginSide = getStyleComputedProperty(data.instance.popper, 'margin' + sideCapitalized).replace('px', '');\n  var sideValue = center - getClientRect(data.offsets.popper)[side] - popperMarginSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {};\n  data.offsets.arrow[side] = Math.round(sideValue);\n  data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement);\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373)\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference.jquery ? reference[0] : reference;\n    this.popper = popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/popper.js/dist/esm/popper.js\n// module id = 8\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}